{"CharlotteDunois\\Yasmin\\Client":{"name":"CharlotteDunois\\Yasmin\\Client","line":27,"short_desc":"The client. What else do you expect this to say?","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\ChannelStorage",false]],"channels","It holds all cached channels, mapped by ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\EmojiStorage",false]],"emojis","It holds all emojis, mapped by ID (custom emojis) and\/or name (unicode emojis)."],[[["\\CharlotteDunois\\Yasmin\\Models\\GuildStorage",false]],"guilds","It holds all guilds, mapped by ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\PresenceStorage",false]],"presences","It holds all cached presences (latest ones), mapped by user ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\UserStorage",false]],"users","It holds all cached users, mapped by ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\ClientUser",false],["null",false]],"user","User that the client is logged in as. The instance gets created when the client turns ready."]],"method":[["on(string","$event,","callable","$listener)","","","","","","","","","","","","","","","Attach","a","listener","to","an","event.","The","method","is","from","the","trait","-","only","for","documentation","purpose","here."],["once(string","$event,","callable","$listener)","","","","","","","","","","","","","Attach","a","listener","to","an","event,","for","exactly","once.","The","method","is","from","the","trait","-","only","for","documentation","purpose","here."],["removeListener(string","$event,","callable","$listener)","","","Remove","specified","listener","from","an","event.","The","method","is","from","the","trait","-","only","for","documentation","purpose","here."],["removeAllListeners($event","=","null)","","","","","","","","","","","","","","","","","","","Remove","all","listeners","from","an","event","(or","all","listeners)."]]},"namespace":"CharlotteDunois\\Yasmin","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Client.php","relative_file":"\\src\\Client.php","hash":"0c35e62cd23a2c05c68110f6533bc39bb664a9f8","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Events\\EventEmitterInterface":"CharlotteDunois\\Events\\EventEmitterInterface"},"traits":{"CharlotteDunois\\Events\\EventEmitterTrait":"CharlotteDunois\\Events\\EventEmitterTrait"},"source":null,"properties":{"channels":{"name":"channels","line":27,"short_desc":"It holds all cached channels, mapped by ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\ChannelStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"emojis":{"name":"emojis","line":27,"short_desc":"It holds all emojis, mapped by ID (custom emojis) and\/or name (unicode emojis).","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\EmojiStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guilds":{"name":"guilds","line":27,"short_desc":"It holds all guilds, mapped by ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"pings":{"name":"pings","line":69,"short_desc":"The last 3 websocket pings (in ms).","long_desc":"","hint":[["int",true]],"hint_desc":"","tags":[],"modifiers":1,"default":{"nodeType":"Expr_Array","items":[],"attributes":{"startLine":69,"endLine":69,"kind":1}},"errors":[],"source":null},"presences":{"name":"presences","line":27,"short_desc":"It holds all cached presences (latest ones), mapped by user ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\PresenceStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"readyTimestamp":{"name":"readyTimestamp","line":75,"short_desc":"The UNIX timestamp of the last emitted ready event (or null if none yet).","long_desc":"","hint":[["int",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"default":{"nodeType":"Expr_ConstFetch","name":{"nodeType":"Name","parts":["null"],"attributes":{"startLine":75,"endLine":75,"namespacedName":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","null"],"attributes":{"startLine":75,"endLine":75}}}},"attributes":{"startLine":75,"endLine":75}},"errors":[],"source":null},"token":{"name":"token","line":81,"short_desc":"The token.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"default":null,"errors":[],"source":null},"user":{"name":"user","line":27,"short_desc":"User that the client is logged in as. The instance gets created when the client turns ready.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\ClientUser",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"users":{"name":"users","line":27,"short_desc":"It holds all cached users, mapped by ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\UserStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":164,"short_desc":"What do you expect this to do? It makes a new Client instance. Available client options are as following (all are optional):","long_desc":"<pre>\narray(\n  'disableClones' => bool|string[], (disables cloning of class instances (for perfomance), affects update events - bool: true - disables all cloning)\n  'disableEveryone' => bool, (disables the everyone and here mentions and replaces them with plaintext)\n  'fetchAllMembers' => bool, (fetches all guild members, this should be avoided - necessary members get automatically fetched)\n  'messageCacheLifetime' => int, (invalidates messages in the store older than the specified duration)\n  'messageSweepInterval' => int, (interval when the message cache gets invalidated (see messageCacheLifetime), defaults to messageCacheLifetime)\n  'shardID' => int, (shard ID, 0-indexed, always needs to be smaller than shardCount, important for sharding)\n  'shardCount' => int, (shard count, important for sharding)\n  'http.restTimeOffset' => int|float, (specifies how many seconds should be waited after one REST request before the next REST request should be done)\n  'ws.compression' => string, (Enables a specific one, defaults to zlib-stream, which is currently the only available compression)\n  'ws.encoding' => string, (use a specific websocket encoding, JSON or ETF (if suggested package installed), recommended is JSON for now)\n  'ws.disabledEvents' => string[], (disables specific websocket events (e.g. TYPING_START), only disable websocket events if you know what they do)\n  'ws.largeThreshold' => int, (50-250, members threshold after which guilds gets counted as large, defaults to 250)\n  'ws.presence' => array (the presence to send on WS connect, see https:\/\/discordapp.com\/developers\/docs\/topics\/gateway#gateway-status-update)\n)\n<\/pre>","hint":null,"hint_desc":null,"tags":{"see":[["\\CharlotteDunois\\Yasmin\\ClientEvents"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":164,"short_desc":"Any client options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false},"loop":{"name":"loop","line":164,"short_desc":"You can pass an event loop to the class, or it will automatically create one (you still need to make it run yourself).","long_desc":null,"hint":[["\\React\\EventLoop\\LoopInterface",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["React","EventLoop","LoopInterface"],"attributes":{"startLine":164,"endLine":164}},"attributes":{"startLine":164,"endLine":164}},"default":"null","variadic":false,"is_by_ref":false}}},"addPeriodicTimer":{"name":"addPeriodicTimer","line":656,"short_desc":"Adds a \"client-dependant\" periodic timer. The timer gets automatically cancelled on destroy. The callback can only accept one argument, the client.","long_desc":"","hint":[["\\React\\EventLoop\\Timer\\Timer",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"interval":{"name":"interval","line":656,"short_desc":"","long_desc":null,"hint":[["float",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"callback":{"name":"callback","line":656,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"addTimer":{"name":"addTimer","line":640,"short_desc":"Adds a \"client-dependant\" timer. The timer gets automatically cancelled on destroy. The callback can only accept one argument, the client.","long_desc":"","hint":[["\\React\\EventLoop\\Timer\\Timer",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"timeout":{"name":"timeout","line":640,"short_desc":"","long_desc":null,"hint":[["float",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"callback":{"name":"callback","line":640,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"cancelTimer":{"name":"cancelTimer","line":670,"short_desc":"Cancels a timer.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"timer":{"name":"timer","line":670,"short_desc":"","long_desc":null,"hint":[["\\React\\EventLoop\\Timer\\Timer",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["React","EventLoop","Timer","Timer"],"attributes":{"startLine":670,"endLine":670}},"default":null,"variadic":false,"is_by_ref":false}}},"cancelTimers":{"name":"cancelTimers","line":684,"short_desc":"Cancels all timers.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"createGuild":{"name":"createGuild","line":421,"short_desc":"Creates a new guild. Resolves with an instance of Guild. Options is as following, everything is optional unless specified:","long_desc":"<pre>\narray(\n  'name' => string, (required)\n  'region' => \\CharlotteDunois\\Yasmin\\Models\\VoiceRegion|string, (required)\n  'icon' => string, (an URL, a filepath or data)\n  'verificationLevel' => int, (0-4)\n  'defaultMessageNotifications' => int, (0 or 1)\n  'explicitContentFilter' => int, (0-2)\n  'roles' => array, (an array of role arrays*)\n  'channels' => array (an array of channel arrays**)\n\n    * array( \/\/ role array\n    *   'name' => string, (required)\n    *   'permissions' => \\CharlotteDunois\\Yasmin\\Models\\Permissions|int,\n    *   'color' => int|string,\n    *   'hoist' => bool,\n    *   'mentionable' => bool\n    * )\n\n    ** array( \/\/ channel array\n    **   'name' => string, (required)\n    **   'type' => 'text'|'voice', (category is not supported by the API, defaults to 'text')\n    **   'bitrate' => int, (only for voice channels)\n    **   'userLimit' => int, (only for voice channels, 0 = unlimited)\n    **   'permissionOverwrites' => array, (an array of permission overwrite arrays***)\n    **   'nsfw' => bool (only for text channels)\n    ** )\n\n    *** array( \/\/ overwrite array, all required\n    ***   'id' => \\CharlotteDunois\\Yasmin\\Models\\User|string, (string = user ID or role name (of above role array!))\n    ***   'allow' => \\CharlotteDunois\\Yasmin\\Models\\Permissions|int,\n    ***   'deny' => \\CharlotteDunois\\Yasmin\\Models\\Permissions|int\n    *** )\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Guild"],["\\CharlotteDunois\\Yasmin\\Constants"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":421,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"destroy":{"name":"destroy","line":358,"short_desc":"Cleanly logs out of Discord.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"destroyUtils":{"name":"destroyUtils","line":358,"short_desc":"Stop timers of utils which have an instance of the event loop.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false}}},"fetchApplication":{"name":"fetchApplication","line":531,"short_desc":"Obtains the OAuth Application of the bot from Discord.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\OAuthApplication"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fetchInvite":{"name":"fetchInvite","line":546,"short_desc":"Obtains an invite from Discord. Resolves with an instance of Invite.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Invite"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"invite":{"name":"invite","line":546,"short_desc":"The invite code or an invite URL.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"fetchUser":{"name":"fetchUser","line":566,"short_desc":"Fetches an User from the API. Resolves with an User.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\User"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"userid":{"name":"userid","line":566,"short_desc":"The User ID to fetch.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"fetchVoiceRegions":{"name":"fetchVoiceRegions","line":584,"short_desc":"Obtains the available voice regions from Discord. Resolves with a Collection of Voice Region instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\VoiceRegion"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fetchWebhook":{"name":"fetchWebhook","line":606,"short_desc":"Fetches a webhook from Discord. Resolves with an instance of Webhook.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Webhook"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"id":{"name":"id","line":606,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"token":{"name":"token","line":606,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":606,"endLine":606}},"default":"null","variadic":false,"is_by_ref":false}}},"generateOAuthInvite":{"name":"generateOAuthInvite","line":623,"short_desc":"Generates a link that can be used to invite the bot to a guild. Resolves with a string.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissions":{"name":"permissions","line":623,"short_desc":"","long_desc":null,"hint":[["string",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":true,"is_by_ref":false}}},"getLoop":{"name":"getLoop","line":252,"short_desc":"Get the React Event Loop that is stored in this class.","long_desc":"","hint":[["\\React\\EventLoop\\LoopInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getOption":{"name":"getOption","line":262,"short_desc":"Get a specific option, or the default value.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":262,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"default":{"name":"default","line":262,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"getPing":{"name":"getPing","line":274,"short_desc":"Gets the average ping. Or NAN.","long_desc":"","hint":[["int",false],["double",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getWSstatus":{"name":"getWSstatus","line":287,"short_desc":"Returns the WS status.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"login":{"name":"login","line":298,"short_desc":"Login into Discord. Opens a WebSocket Gateway connection. Resolves once a WebSocket connection has been successfully established (does not mean the client is ready).","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\RuntimeException",""]],"errors":[],"example":null,"source":null,"parameters":{"token":{"name":"token","line":298,"short_desc":"Your token.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"force":{"name":"force","line":298,"short_desc":"Forces the client to get the gateway address from Discord.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"on":{"name":"on","line":27,"short_desc":"Attach a listener to an event. The method is from the trait - only for documentation purpose here.","long_desc":null,"hint":null,"hint_desc":null,"tags":[],"modifiers":null,"is_by_ref":null,"exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"event":{"name":"event","line":27,"short_desc":null,"long_desc":null,"hint":[["string ",null]],"tags":[],"modifiers":null,"default":null,"variadic":null,"is_by_ref":null},"listener":{"name":"listener","line":27,"short_desc":null,"long_desc":null,"hint":[["callable ",null]],"tags":[],"modifiers":null,"default":null,"variadic":null,"is_by_ref":null}}},"once":{"name":"once","line":27,"short_desc":"Attach a listener to an event, for exactly once. The method is from the trait - only for documentation purpose here.","long_desc":null,"hint":null,"hint_desc":null,"tags":[],"modifiers":null,"is_by_ref":null,"exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"event":{"name":"event","line":27,"short_desc":null,"long_desc":null,"hint":[["string ",null]],"tags":[],"modifiers":null,"default":null,"variadic":null,"is_by_ref":null},"listener":{"name":"listener","line":27,"short_desc":null,"long_desc":null,"hint":[["callable ",null]],"tags":[],"modifiers":null,"default":null,"variadic":null,"is_by_ref":null}}},"removeAllListeners":{"name":"removeAllListeners","line":27,"short_desc":"Remove all listeners from an event (or all listeners).","long_desc":null,"hint":null,"hint_desc":null,"tags":[],"modifiers":null,"is_by_ref":null,"exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"event":{"name":"event","line":27,"short_desc":null,"long_desc":null,"hint":null,"tags":[],"modifiers":null,"default":"null","variadic":null,"is_by_ref":null}}},"removeListener":{"name":"removeListener","line":27,"short_desc":"Remove specified listener from an event. The method is from the trait - only for documentation purpose here.","long_desc":null,"hint":null,"hint_desc":null,"tags":[],"modifiers":null,"is_by_ref":null,"exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"event":{"name":"event","line":27,"short_desc":null,"long_desc":null,"hint":[["string ",null]],"tags":[],"modifiers":null,"default":null,"variadic":null,"is_by_ref":null},"listener":{"name":"listener","line":27,"short_desc":null,"long_desc":null,"hint":[["callable ",null]],"tags":[],"modifiers":null,"default":null,"variadic":null,"is_by_ref":null}}}},"constants":[]},"CharlotteDunois\\Yasmin\\ClientEvents":{"name":"CharlotteDunois\\Yasmin\\ClientEvents","line":17,"short_desc":"Documents all Client events. ($client->on('name here', callable))","long_desc":"The second parameter of *Update events is null, if cloning for that event is disabled.","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\ClientEvents.php","relative_file":"\\src\\ClientEvents.php","hash":"9e80eb171e9862aef542cd9decc788c366e65661","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"channelCreate":{"name":"channelCreate","line":88,"short_desc":"Emitted when a channel gets created.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":88,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","ChannelInterface"],"attributes":{"startLine":88,"endLine":88}},"default":null,"variadic":false,"is_by_ref":false}}},"channelDelete":{"name":"channelDelete","line":98,"short_desc":"Emitted when a channel gets deleted.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":98,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","ChannelInterface"],"attributes":{"startLine":98,"endLine":98}},"default":null,"variadic":false,"is_by_ref":false}}},"channelPinsUpdate":{"name":"channelPinsUpdate","line":105,"short_desc":"Emitted when a channel's pins gets updated. Due to the nature of the event, it's not possible to do much.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":105,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","ChannelInterface"],"attributes":{"startLine":105,"endLine":105}},"default":null,"variadic":false,"is_by_ref":false},"time":{"name":"time","line":105,"short_desc":"","long_desc":null,"hint":[["\\DateTime",false],["null",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"channelUpdate":{"name":"channelUpdate","line":93,"short_desc":"Emitted when a channel gets updated.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":93,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","ChannelInterface"],"attributes":{"startLine":93,"endLine":93}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":93,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","ChannelInterface"],"attributes":{"startLine":93,"endLine":93}},"default":null,"variadic":false,"is_by_ref":false}}},"debug":{"name":"debug","line":65,"short_desc":"Debug messages.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"message":{"name":"message","line":65,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Exception",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"disconnect":{"name":"disconnect","line":26,"short_desc":"Emitted when the client gets disconnected from the gateway.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"error":{"name":"error","line":59,"short_desc":"Emitted when an error happens.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"error":{"name":"error","line":59,"short_desc":null,"long_desc":null,"hint":[["\\Exception",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Exception"],"attributes":{"startLine":59,"endLine":59}},"default":null,"variadic":false,"is_by_ref":false}}},"guildBanAdd":{"name":"guildBanAdd","line":130,"short_desc":"Emitted when someone gets banned.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":130,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":130,"endLine":130}},"default":null,"variadic":false,"is_by_ref":false},"user":{"name":"user","line":130,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":130,"endLine":130}},"default":null,"variadic":false,"is_by_ref":false}}},"guildBanRemove":{"name":"guildBanRemove","line":135,"short_desc":"Emitted when someone gets unbanned.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":135,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":135,"endLine":135}},"default":null,"variadic":false,"is_by_ref":false},"user":{"name":"user","line":135,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":135,"endLine":135}},"default":null,"variadic":false,"is_by_ref":false}}},"guildCreate":{"name":"guildCreate","line":110,"short_desc":"Emitted when a guild gets joined.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":110,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":110,"endLine":110}},"default":null,"variadic":false,"is_by_ref":false}}},"guildDelete":{"name":"guildDelete","line":120,"short_desc":"Emitted when a guild gets left.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":120,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":120,"endLine":120}},"default":null,"variadic":false,"is_by_ref":false}}},"guildMemberAdd":{"name":"guildMemberAdd","line":140,"short_desc":"Emitted when an user joins a guild.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"member":{"name":"member","line":140,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","GuildMember"],"attributes":{"startLine":140,"endLine":140}},"default":null,"variadic":false,"is_by_ref":false}}},"guildMemberRemove":{"name":"guildMemberRemove","line":150,"short_desc":"Emitted when an user leaves a guild.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"member":{"name":"member","line":150,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","GuildMember"],"attributes":{"startLine":150,"endLine":150}},"default":null,"variadic":false,"is_by_ref":false}}},"guildMemberUpdate":{"name":"guildMemberUpdate","line":145,"short_desc":"Emitted when a member gets updated.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":145,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","GuildMember"],"attributes":{"startLine":145,"endLine":145}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":145,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","GuildMember"],"attributes":{"startLine":145,"endLine":145}},"default":null,"variadic":false,"is_by_ref":false}}},"guildMembersChunk":{"name":"guildMembersChunk","line":156,"short_desc":"Emitted when the gateway sends requested members. The collection consists of GuildMember instances, mapped by their user ID.","long_desc":"","hint":null,"hint_desc":null,"tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":156,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":156,"endLine":156}},"default":null,"variadic":false,"is_by_ref":false},"members":{"name":"members","line":156,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Utils","Collection"],"attributes":{"startLine":156,"endLine":156}},"default":null,"variadic":false,"is_by_ref":false}}},"guildUnavailable":{"name":"guildUnavailable","line":125,"short_desc":"Emitted when a guild becomes (un)available.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":125,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":125,"endLine":125}},"default":null,"variadic":false,"is_by_ref":false}}},"guildUpdate":{"name":"guildUpdate","line":115,"short_desc":"Emitted when a guild gets updated.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":115,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":115,"endLine":115}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":115,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Guild"],"attributes":{"startLine":115,"endLine":115}},"default":null,"variadic":false,"is_by_ref":false}}},"message":{"name":"message","line":176,"short_desc":"Emitted when a message gets received.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"message":{"name":"message","line":176,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Message"],"attributes":{"startLine":176,"endLine":176}},"default":null,"variadic":false,"is_by_ref":false}}},"messageDelete":{"name":"messageDelete","line":186,"short_desc":"Emitted when a (cached) message gets deleted.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"message":{"name":"message","line":186,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Message"],"attributes":{"startLine":186,"endLine":186}},"default":null,"variadic":false,"is_by_ref":false}}},"messageDeleteBulk":{"name":"messageDeleteBulk","line":192,"short_desc":"Emitted when multiple (cached) message gets deleted. The collection consists of Message instances, mapped by their ID.","long_desc":"","hint":null,"hint_desc":null,"tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"messages":{"name":"messages","line":192,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Utils","Collection"],"attributes":{"startLine":192,"endLine":192}},"default":null,"variadic":false,"is_by_ref":false}}},"messageDeleteBulkRaw":{"name":"messageDeleteBulkRaw","line":47,"short_desc":"Emitted when multple uncached messages gets deleted.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":47,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","TextChannelInterface"],"attributes":{"startLine":47,"endLine":47}},"default":null,"variadic":false,"is_by_ref":false},"messageIDs":{"name":"messageIDs","line":47,"short_desc":null,"long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"messageDeleteRaw":{"name":"messageDeleteRaw","line":42,"short_desc":"Emitted when an uncached message gets deleted.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":42,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","TextChannelInterface"],"attributes":{"startLine":42,"endLine":42}},"default":null,"variadic":false,"is_by_ref":false},"messageID":{"name":"messageID","line":42,"short_desc":null,"long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"messageReactionAdd":{"name":"messageReactionAdd","line":197,"short_desc":"Emitted when someone reacts to a (cached) message.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reaction":{"name":"reaction","line":197,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\MessageReaction",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","MessageReaction"],"attributes":{"startLine":197,"endLine":197}},"default":null,"variadic":false,"is_by_ref":false},"user":{"name":"user","line":197,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":197,"endLine":197}},"default":null,"variadic":false,"is_by_ref":false}}},"messageReactionRemove":{"name":"messageReactionRemove","line":202,"short_desc":"Emitted when a reaction from a (cached) message gets removed.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reaction":{"name":"reaction","line":202,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\MessageReaction",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","MessageReaction"],"attributes":{"startLine":202,"endLine":202}},"default":null,"variadic":false,"is_by_ref":false},"user":{"name":"user","line":202,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":202,"endLine":202}},"default":null,"variadic":false,"is_by_ref":false}}},"messageReactionRemoveAll":{"name":"messageReactionRemoveAll","line":207,"short_desc":"Emitted when all reactions from a (cached) message gets removed.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"message":{"name":"message","line":207,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Message"],"attributes":{"startLine":207,"endLine":207}},"default":null,"variadic":false,"is_by_ref":false}}},"messageUpdate":{"name":"messageUpdate","line":181,"short_desc":"Emitted when a (cached) message gets updated.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":181,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Message"],"attributes":{"startLine":181,"endLine":181}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":181,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Message"],"attributes":{"startLine":181,"endLine":181}},"default":null,"variadic":false,"is_by_ref":false}}},"messageUpdateRaw":{"name":"messageUpdateRaw","line":54,"short_desc":"Emitted when an uncached message gets updated.","long_desc":"","hint":null,"hint_desc":null,"tags":{"see":[["https:\/\/discordapp.com\/developers\/docs\/topics\/gateway#message-update"],["https:\/\/discordapp.com\/developers\/docs\/resources\/channel#message-object"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":54,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","TextChannelInterface"],"attributes":{"startLine":54,"endLine":54}},"default":null,"variadic":false,"is_by_ref":false},"data":{"name":"data","line":54,"short_desc":null,"long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"presenceUpdate":{"name":"presenceUpdate","line":212,"short_desc":"Emitted when a presence updates.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"presence":{"name":"presence","line":212,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Presence"],"attributes":{"startLine":212,"endLine":212}},"default":null,"variadic":false,"is_by_ref":false}}},"ratelimit":{"name":"ratelimit","line":83,"short_desc":"Ratelimit information.","long_desc":"The array has the following format:\n<pre>\narray(\n    'endpoint' => string,\n    'global' => bool,\n    'limit' => int|float, (float = \\INF)\n    'remaining => int,\n    'resetTime' => int|null\n)\n<\/pre>","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":83,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"raw":{"name":"raw","line":37,"short_desc":"Emitted when we receive a message from the gateway.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"message":{"name":"message","line":37,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"ready":{"name":"ready","line":21,"short_desc":"Emitted when the client is ready.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"reconnect":{"name":"reconnect","line":31,"short_desc":"Emitted when the client tries to reconnect.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"roleCreate":{"name":"roleCreate","line":161,"short_desc":"Emitted when a role gets created.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":161,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Role"],"attributes":{"startLine":161,"endLine":161}},"default":null,"variadic":false,"is_by_ref":false}}},"roleDelete":{"name":"roleDelete","line":171,"short_desc":"Emitted when a role gets deleted.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":171,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Role"],"attributes":{"startLine":171,"endLine":171}},"default":null,"variadic":false,"is_by_ref":false}}},"roleUpdate":{"name":"roleUpdate","line":166,"short_desc":"Emitted when a role gets updated.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":166,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Role"],"attributes":{"startLine":166,"endLine":166}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":166,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Role"],"attributes":{"startLine":166,"endLine":166}},"default":null,"variadic":false,"is_by_ref":false}}},"typingStart":{"name":"typingStart","line":217,"short_desc":"Emitted when someone starts typing in the channel.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":217,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Interfaces","TextChannelInterface"],"attributes":{"startLine":217,"endLine":217}},"default":null,"variadic":false,"is_by_ref":false},"user":{"name":"user","line":217,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":217,"endLine":217}},"default":null,"variadic":false,"is_by_ref":false}}},"userUpdate":{"name":"userUpdate","line":222,"short_desc":"Emitted when someone updates their user account (username\/avatar\/etc.).","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":222,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":222,"endLine":222}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":222,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":222,"endLine":222}},"default":null,"variadic":false,"is_by_ref":false}}},"voiceStateUpdate":{"name":"voiceStateUpdate","line":227,"short_desc":"Emitted when a member's voice state changes (leaves\/joins\/etc.).","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"new":{"name":"new","line":227,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","GuildMember"],"attributes":{"startLine":227,"endLine":227}},"default":null,"variadic":false,"is_by_ref":false},"old":{"name":"old","line":227,"short_desc":null,"long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","GuildMember"],"attributes":{"startLine":227,"endLine":227}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Constants":{"name":"CharlotteDunois\\Yasmin\\Constants","line":15,"short_desc":"Holds all constants.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Constants.php","relative_file":"\\src\\Constants.php","hash":"651723f154d2ad1e48ee63b09a981450ea189ee2","parent":null,"modifiers":32,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":[],"constants":{"ACTIVITY_TYPES":{"name":"ACTIVITY_TYPES","line":158,"short_desc":"Activity types.","long_desc":"","source":["const ACTIVITY_TYPES = array(\r\n    0 => 'playing',\r\n    1 => 'streaming',\r\n    2 => 'listening',\r\n    3 => 'watching'\r\n);",""]},"CHANNEL_TYPES":{"name":"CHANNEL_TYPES","line":170,"short_desc":"Channel Types.","long_desc":"","source":["const CHANNEL_TYPES = array(\r\n    0 => 'text',\r\n    1 => 'dm',\r\n    2 => 'voice',\r\n    3 => 'group',\r\n    4 => 'category',\r\n    \r\n    'text' => 0,\r\n    'dm' => 1,\r\n    'voice' => 2,\r\n    'group' => 3,\r\n    'category' => 4\r\n);",""]},"DEFAULT_USER_AGENT":{"name":"DEFAULT_USER_AGENT","line":27,"short_desc":"The default HTTP user agent.","long_desc":"","source":null},"DISCORD_COLORS":{"name":"DISCORD_COLORS","line":249,"short_desc":"The default discord role colors. Mapped by uppercase string to integer.","long_desc":"","source":["const DISCORD_COLORS = array(\r\n    'AQUA' => 1752220,\r\n    'BLUE' => 3447003,\r\n    'GREEN' => 3066993,\r\n    'PURPLE' => 10181046,\r\n    'GOLD' => 15844367,\r\n    'ORANGE' => 15105570,\r\n    'RED' => 15158332,\r\n    'GREY' => 9807270,\r\n    'DARKER_GREY' => 8359053,\r\n    'NAVY' => 3426654,\r\n    'DARK_AQUA' => 1146986,\r\n    'DARK_GREEN' => 2067276,\r\n    'DARK_BLUE' => 2123412,\r\n    'DARK_GOLD' => 12745742,\r\n    'DARK_PURPLE' => 7419530,\r\n    'DARK_ORANGE' => 11027200,\r\n    'DARK_GREY' => 9936031,\r\n    'DARK_RED' => 10038562,\r\n    'LIGHT_GREY' => 12370112,\r\n    'DARK_NAVY' => 2899536\r\n);",""]},"GUILD_DEFAULT_MESSAGE_NOTIFICATIONS":{"name":"GUILD_DEFAULT_MESSAGE_NOTIFICATIONS","line":205,"short_desc":"Guild default message notifications.","long_desc":"","source":["const GUILD_DEFAULT_MESSAGE_NOTIFICATIONS = array(\r\n    0 => 'EVERYTHING',\r\n    1 => 'ONLY_MENTIONS'\r\n);",""]},"GUILD_EXPLICIT_CONTENT_FILTER":{"name":"GUILD_EXPLICIT_CONTENT_FILTER","line":215,"short_desc":"Guild explicit content filter.","long_desc":"","source":["const GUILD_EXPLICIT_CONTENT_FILTER = array(\r\n    0 => 'DISABLED',\r\n    1 => 'MEMBERS_WITHOUT_ROLES',\r\n    2 => 'ALL_MEMBERS'\r\n);",""]},"GUILD_MFA_LEVEL":{"name":"GUILD_MFA_LEVEL","line":226,"short_desc":"Guild MFA level.","long_desc":"","source":["const GUILD_MFA_LEVEL = array(\r\n    0 => 'NONE',\r\n    1 => 'ELEVATED'\r\n);",""]},"GUILD_VERIFICATION_LEVEL":{"name":"GUILD_VERIFICATION_LEVEL","line":236,"short_desc":"Guild verification level.","long_desc":"","source":["const GUILD_VERIFICATION_LEVEL = array(\r\n    0 => 'NONE',\r\n    1 => 'LOW',\r\n    2 => 'MEDIUM',\r\n    3 => 'HIGH',\r\n    4 => 'VERY_HIGH'\r\n);",""]},"MESSAGE_TYPES":{"name":"MESSAGE_TYPES","line":189,"short_desc":"Messages Types.","long_desc":"","source":["const MESSAGE_TYPES = array(\r\n    0 => 'DEFAULT',\r\n    1 => 'RECIPIENT_ADD',\r\n    2 => 'RECIPIENT_REMOVE',\r\n    3 => 'CALL',\r\n    4 => 'CHANNEL_NAME_CHANGE',\r\n    5 => 'CHANNEL_ICON_CHANGE',\r\n    6 => 'CHANNEL_PINNED_MESSAGE',\r\n    7 => 'GUILD_MEMBER_JOIN'\r\n);",""]},"PERMISSIONS":{"name":"PERMISSIONS","line":460,"short_desc":"Available Permissions in Discord.","long_desc":"","source":null},"VERSION":{"name":"VERSION","line":20,"short_desc":"The version of Yasmin.","long_desc":"","source":null},"WS_DEFAULT_COMPRESSION":{"name":"WS_DEFAULT_COMPRESSION","line":151,"short_desc":"WS default compression.","long_desc":"","source":null},"WS_STATUS_CONNECTED":{"name":"WS_STATUS_CONNECTED","line":139,"short_desc":"WS connection status: Connected (ready).","long_desc":"","source":null},"WS_STATUS_CONNECTING":{"name":"WS_STATUS_CONNECTING","line":121,"short_desc":"WS connection status: Connecting.","long_desc":"","source":null},"WS_STATUS_DISCONNECTED":{"name":"WS_STATUS_DISCONNECTED","line":115,"short_desc":"WS connection status: Disconnected.","long_desc":"","source":null},"WS_STATUS_IDLE":{"name":"WS_STATUS_IDLE","line":145,"short_desc":"WS connection status: Idling (disconnected and no reconnect planned).","long_desc":"","source":null},"WS_STATUS_NEARLY":{"name":"WS_STATUS_NEARLY","line":133,"short_desc":"WS connection status: Connected (not ready yet - nearly).","long_desc":"","source":null},"WS_STATUS_RECONNECTING":{"name":"WS_STATUS_RECONNECTING","line":127,"short_desc":"WS connection status: Reconnecting.","long_desc":"","source":null}}},"CharlotteDunois\\Yasmin\\HTTP\\DiscordAPIException":{"name":"CharlotteDunois\\Yasmin\\HTTP\\DiscordAPIException","line":15,"short_desc":"Represents an error from the Discord API.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\HTTP","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\HTTP\\DiscordAPIException.php","relative_file":"\\src\\HTTP\\DiscordAPIException.php","hash":"5d8bd4f885a542a272a5c85714c1bd2dd3ff6788","parent":"Exception","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"path":{"name":"path","line":20,"short_desc":"The path of the request relative to the HTTP endpoint.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":27,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"path":{"name":"path","line":27,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"error":{"name":"error","line":27,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface","line":15,"short_desc":"Something all channels implement.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\ChannelInterface.php","relative_file":"\\src\\Interfaces\\ChannelInterface.php","hash":"a3e9a02fbb9ec2b203231671a043a0a61bb15170","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface","line":15,"short_desc":"Something all guild channels implement. See GuildChannelTrait for full comments.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\GuildChannelInterface.php","relative_file":"\\src\\Interfaces\\GuildChannelInterface.php","hash":"c4a6574ec67915d224f2c3e3bca89a866a57751e","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"clone":{"name":"clone","line":31,"short_desc":"Clones a guild channel. Resolves with an instance of GuildChannelInterface.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":31,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":31,"endLine":31}},"default":"null","variadic":false,"is_by_ref":false},"withPermissions":{"name":"withPermissions","line":31,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false},"withTopic":{"name":"withTopic","line":31,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":31,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"createInvite":{"name":"createInvite","line":21,"short_desc":"Creates an invite. Resolves with an instance of Invite.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":21,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"delete":{"name":"delete","line":47,"short_desc":"Deletes the channel.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":47,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":40,"short_desc":"Edits the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":40,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":40,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"fetchInvites":{"name":"fetchInvites","line":54,"short_desc":"Fetches all invites of this channel. Resolves with a Collection of Invite instances, mapped by their code.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Invite"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"lockPermissions":{"name":"lockPermissions","line":89,"short_desc":"Locks in the permission overwrites from the parent channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException",""]],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":89,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"overwritePermissions":{"name":"overwritePermissions","line":81,"short_desc":"Overwrites the permissions for a member or role in this channel. Resolves with an instance of PermissionOverwrite.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"memberOrRole":{"name":"memberOrRole","line":81,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"allow":{"name":"allow","line":81,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"deny":{"name":"deny","line":81,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false],["int",false]],"tags":[],"modifiers":null,"default":"0","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":81,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"overwritesFor":{"name":"overwritesFor","line":70,"short_desc":"Returns the permissions overwrites for the given member.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"member":{"name":"member","line":70,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"permissionsFor":{"name":"permissionsFor","line":62,"short_desc":"Returns the permissions for the given member.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"member":{"name":"member","line":62,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"setNSFW":{"name":"setNSFW","line":107,"short_desc":"Sets the nsfw flag of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"nsfw":{"name":"nsfw","line":107,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":107,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setName":{"name":"setName","line":98,"short_desc":"Sets the name of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":98,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":98,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setParent":{"name":"setParent","line":116,"short_desc":"Sets the parent of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"parent":{"name":"parent","line":116,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\CategoryChannel",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":116,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPermissionOverwrites":{"name":"setPermissionOverwrites","line":125,"short_desc":"Sets the permission overwrites of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissionOverwrites":{"name":"permissionOverwrites","line":125,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false],["array",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":125,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPosition":{"name":"setPosition","line":134,"short_desc":"Sets the position of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"position":{"name":"position","line":134,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":134,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setTopic":{"name":"setTopic","line":143,"short_desc":"Sets the topic of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"topic":{"name":"topic","line":143,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":143,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface","line":15,"short_desc":"Something all storages implement.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\StorageInterface.php","relative_file":"\\src\\Interfaces\\StorageInterface.php","hash":"b598a0499676d2f9fda531c84570cd667ef9a403","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface","line":15,"short_desc":"Something all textchannels (all text-based channels) implement. See TextChannelTrait for full comments.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\TextChannelInterface.php","relative_file":"\\src\\Interfaces\\TextChannelInterface.php","hash":"d678b79a0176be29cc363bd5c3436b63da8cc41e","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"bulkDelete":{"name":"bulkDelete","line":23,"short_desc":"Deletes multiple messages at once. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"messages":{"name":"messages","line":23,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false],["array",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":23,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false},"filterOldMessages":{"name":"filterOldMessages","line":23,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"collectMessages":{"name":"collectMessages","line":32,"short_desc":"Collects messages during a specific duration (and max. amount). Resolves with a Collection of Message instances, mapped by their IDs.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"filter":{"name":"filter","line":32,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":32,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"fetchMessage":{"name":"fetchMessage","line":40,"short_desc":"Fetches a specific message using the ID. Resolves with an instance of Message.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"id":{"name":"id","line":40,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"fetchMessages":{"name":"fetchMessages","line":48,"short_desc":"Fetches messages of this channel. Resolves with a Collection of Message instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":48,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"isTyping":{"name":"isTyping","line":81,"short_desc":"Determines whether the given user is typing in this channel or not.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":81,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":81,"endLine":81}},"default":null,"variadic":false,"is_by_ref":false}}},"send":{"name":"send","line":57,"short_desc":"Sends a message to a channel. Resolves with an instance of Message, or a Collection of Message instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"content":{"name":"content","line":57,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":57,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"startTyping":{"name":"startTyping","line":62,"short_desc":"Starts sending the typing indicator in this channel. Counts up a triggered typing counter.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"stopTyping":{"name":"stopTyping","line":68,"short_desc":"Stops sending the typing indicator in this channel. Counts down a triggered typing counter.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"force":{"name":"force","line":68,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"typingCount":{"name":"typingCount","line":74,"short_desc":"Returns the amount of user typing in this channel.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\VoiceChannelInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\VoiceChannelInterface","line":15,"short_desc":"Something all voicechannels implement.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\VoiceChannelInterface.php","relative_file":"\\src\\Interfaces\\VoiceChannelInterface.php","hash":"48065becf3a4f819124ef065fceed059b618c2f7","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface","line":15,"short_desc":"Interface for WS compressions. This is used internally.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\WSCompressionInterface.php","relative_file":"\\src\\Interfaces\\WSCompressionInterface.php","hash":"4019a989abe51c71e19dfc379c408eeca03aa402","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"decompress":{"name":"decompress","line":50,"short_desc":"Decompresses data.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException|\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":50,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"destroy":{"name":"destroy","line":30,"short_desc":"Destroys the context.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getName":{"name":"getName","line":20,"short_desc":"Returns compression name (for gateway query string).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"init":{"name":"init","line":25,"short_desc":"Initializes the context.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"payloadCompression":{"name":"payloadCompression","line":42,"short_desc":"Returns a boolean for the OP code 2 IDENTIFY packet 'compress' parameter. The parameter is for payload compression.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"supported":{"name":"supported","line":36,"short_desc":"Checks if the system supports it.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface":{"name":"CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface","line":15,"short_desc":"Interface for WS encodings. This is used internally.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Interfaces","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Interfaces\\WSEncodingInterface.php","relative_file":"\\src\\Interfaces\\WSEncodingInterface.php","hash":"1e3a0f73ec83103d3c6ce9574cfedc6bb7a2e01b","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"decode":{"name":"decode","line":34,"short_desc":"Decodes data.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Exception|\\BadMethodCallException|\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":34,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"encode":{"name":"encode","line":42,"short_desc":"Encodes data.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Exception|\\BadMethodCallException|\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":42,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"getName":{"name":"getName","line":20,"short_desc":"Returns encoding name (for gateway query string).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"prepareMessage":{"name":"prepareMessage","line":49,"short_desc":"Prepares the data to be sent.","long_desc":"","hint":[["string",false],["\\Ratchet\\RFC6455\\Messaging\\Message",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":49,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"supported":{"name":"supported","line":26,"short_desc":"Checks if the system supports it.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Activity":{"name":"CharlotteDunois\\Yasmin\\Models\\Activity","line":28,"short_desc":"Something someone does.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"name","The name of the activity."],[[["int",false]],"type","The type."],[[["string",false],["null",false]],"url","The stream url, if streaming."],[[["string",false],["null",false]],"applicationID","The application ID associated with the activity, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets",false],["null",false]],"assets","Assets for rich presence, or null."],[[["string",false],["null",false]],"details","Details about the activity, or null."],[[["array",false],["null",false]],"party","Party of the activity, an array of ('id', 'size' => [ size, max ]), or null."],[[["string",false],["null",false]],"state","State of the activity, or null."],[[["array",false],["null",false]],"timestamps","Timestamps for the activity, an array of ('start' => \\DateTime|null, 'end' => \\DateTime|null), or null."],[[["bool",false]],"streaming","Whether or not the activity is being streamed."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Activity.php","relative_file":"\\src\\Models\\Activity.php","hash":"df36f6658af57d12d632bf4c177080f0b789dbae","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"applicationID":{"name":"applicationID","line":28,"short_desc":"The application ID associated with the activity, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"assets":{"name":"assets","line":28,"short_desc":"Assets for rich presence, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"details":{"name":"details","line":28,"short_desc":"Details about the activity, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":28,"short_desc":"The name of the activity.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"party":{"name":"party","line":28,"short_desc":"Party of the activity, an array of ('id', 'size' => [ size, max ]), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"state":{"name":"state","line":28,"short_desc":"State of the activity, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"streaming":{"name":"streaming","line":28,"short_desc":"Whether or not the activity is being streamed.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"timestamps":{"name":"timestamps","line":28,"short_desc":"Timestamps for the activity, an array of ('start' => \\DateTime|null, 'end' => \\DateTime|null), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":28,"short_desc":"The type.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"url":{"name":"url","line":28,"short_desc":"The stream url, if streaming.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":45,"short_desc":"The manual creation of such a class is discouraged. There may be an easy and safe way to create such a class in the future.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"client":{"name":"client","line":45,"short_desc":"The client this instance is for.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Client",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Client"],"attributes":{"startLine":45,"endLine":45}},"default":null,"variadic":false,"is_by_ref":false},"activity":{"name":"activity","line":45,"short_desc":"An array containing name, type (as int) and url (nullable).","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\CategoryChannel":{"name":"CharlotteDunois\\Yasmin\\Models\\CategoryChannel","line":25,"short_desc":"Represents a guild's category channel.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The ID of the channel."],[[["string",false]],"name","The channel name."],[[["string",false]],"type","The channel type ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","The guild this category channel belongs to."],[[["int",false]],"createdTimestamp","The timestamp of when this channel was created."],[[["int",false]],"position","The channel position."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"permissionOverwrites","A collection of PermissionOverwrite instances."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"children","Returns all channels which are childrens of this category."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\CategoryChannel.php","relative_file":"\\src\\Models\\CategoryChannel.php","hash":"846a6fd4a34663d147ae9ab990ba81e4117527e1","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface","CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface"},"traits":{"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait":"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait"},"source":null,"properties":{"children":{"name":"children","line":25,"short_desc":"Returns all channels which are childrens of this category.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":25,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":25,"short_desc":"The timestamp of when this channel was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":25,"short_desc":"The guild this category channel belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":25,"short_desc":"The ID of the channel.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":25,"short_desc":"The channel name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissionOverwrites":{"name":"permissionOverwrites","line":25,"short_desc":"A collection of PermissionOverwrite instances.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"position":{"name":"position","line":25,"short_desc":"The channel position.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":25,"short_desc":"The channel type ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES}).","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\ChannelStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\ChannelStorage","line":15,"short_desc":"Channel Storage to store channels, which utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\ChannelStorage.php","relative_file":"\\src\\Models\\ChannelStorage.php","hash":"937a6904a35a6b69c3bec55de80444995b07bef9","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"delete":{"name":"delete","line":53,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":53,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"resolve":{"name":"resolve","line":22,"short_desc":"Resolves given data to a channel.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":22,"short_desc":"string = channel ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"set":{"name":"set","line":41,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":41,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":41,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\ClientBase":{"name":"CharlotteDunois\\Yasmin\\Models\\ClientBase","line":16,"short_desc":"Something all Models, with the need for a client, extend. Do not use this.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Client",false]],"client","The client which initiated the instance."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\ClientBase.php","relative_file":"\\src\\Models\\ClientBase.php","hash":"cdd38f54045a79cb8073ea6d8a67fab8cf73c06e","parent":"CharlotteDunois\\Yasmin\\Models\\Base","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"client":{"name":"client","line":16,"short_desc":"The client which initiated the instance.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Client",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\ClientUser":{"name":"CharlotteDunois\\Yasmin\\Models\\ClientUser","line":15,"short_desc":"Represents the Client User.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\ClientUser.php","relative_file":"\\src\\Models\\ClientUser.php","hash":"34b608f21ef9f4538bec11749a16458e1ca798e8","parent":"CharlotteDunois\\Yasmin\\Models\\User","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"createGroupDM":{"name":"createGroupDM","line":265,"short_desc":"Creates a new Group DM with the owner of the access tokens. Resolves with an instance of GroupDMChannel. The structure of the array is as following:","long_desc":"<pre>\narray(\n  'accessToken' => \\CharlotteDunois\\Yasmin\\Models\\User|string (user ID)\n)\n<\/pre>\n\nThe nicks array is an associative array of userID => nick. The nick defaults to the username.","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\GroupDMChannel"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"userWithAccessTokens":{"name":"userWithAccessTokens","line":265,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"nicks":{"name":"nicks","line":265,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"setActivity":{"name":"setActivity","line":130,"short_desc":"Set your activity. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":130,"short_desc":"The activity name.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Activity",false],["string",false],["null",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"type":{"name":"type","line":130,"short_desc":"Optional if first argument is an Activity. The type of your activity. Should be listening (2) or watching (3). For playing\/streaming use ClientUser::setGame.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false}}},"setAvatar":{"name":"setAvatar","line":80,"short_desc":"Set your avatar. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"avatar":{"name":"avatar","line":80,"short_desc":"An URL or the filepath or the data. Null resets your avatar.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":80,"endLine":80}},"default":null,"variadic":false,"is_by_ref":false}}},"setGame":{"name":"setGame","line":158,"short_desc":"Set your playing game. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":158,"short_desc":"The game name.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":158,"endLine":158}},"default":null,"variadic":false,"is_by_ref":false},"url":{"name":"url","line":158,"short_desc":"If you're streaming, this is the url to the stream.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPresence":{"name":"setPresence","line":200,"short_desc":"Set your presence. Ratelimit is 5\/60s, which gets handled by this method and after the ratelimit passed, it will set the last set presence as presence, skipping all previous set presences. Resolves with $this.","long_desc":"$presence = array(\n  'afk' => bool,\n  'since' => integer|null,\n  'status' => string,\n  'game' => array(\n         'name' => string,\n         'type' => int,\n         'url' => string|null\n     )|null\n )\n\n Any field in the first dimension is optional and will be automatically filled with the last known value.","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"presence":{"name":"presence","line":200,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"setStatus":{"name":"setStatus","line":116,"short_desc":"Set your status. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"status":{"name":"status","line":116,"short_desc":"Valid values are: online, idle, dnd and offline.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"setUsername":{"name":"setUsername","line":103,"short_desc":"Set your username. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"username":{"name":"username","line":103,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\DMChannel":{"name":"CharlotteDunois\\Yasmin\\Models\\DMChannel","line":27,"short_desc":"Represents a classic DM channel.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The channel ID."],[[["string",false]],"type","The channel type. ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})"],[[["int",false]],"createdTimestamp","The timestamp of when this channel was created."],[[["string",false],["null",false]],"ownerID","The owner ID of this channel, or null."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"recipients","The recipients of this channel."],[[["string",false],["null",false]],"lastMessageID","The last message ID, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\MessageStorage",false]],"messages","The storage with all cached messages."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."],[[["\\CharlotteDunois\\Yasmin\\Models\\Message",false],["null",false]],"lastMessage","The last message, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"owner","The owner of this channel, or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\DMChannel.php","relative_file":"\\src\\Models\\DMChannel.php","hash":"a763383fc883c546af95c8fa2f34b303a2892821","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface","CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface"},"traits":{"CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait":"CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait"},"source":null,"properties":{"createdAt":{"name":"createdAt","line":27,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":27,"short_desc":"The timestamp of when this channel was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":27,"short_desc":"The channel ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"lastMessage":{"name":"lastMessage","line":27,"short_desc":"The last message, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"lastMessageID":{"name":"lastMessageID","line":27,"short_desc":"The last message ID, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"messages":{"name":"messages","line":27,"short_desc":"The storage with all cached messages.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\MessageStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"owner":{"name":"owner","line":27,"short_desc":"The owner of this channel, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"ownerID":{"name":"ownerID","line":27,"short_desc":"The owner ID of this channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"recipients":{"name":"recipients","line":27,"short_desc":"The recipients of this channel.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":27,"short_desc":"The channel type. ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"isRecipient":{"name":"isRecipient","line":107,"short_desc":"Determines whether a given user is a recipient of this channel.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":107,"short_desc":"The User instance or user ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Emoji":{"name":"CharlotteDunois\\Yasmin\\Models\\Emoji","line":29,"short_desc":"Represents an emoji - both custom and unicode emojis.","long_desc":"","hint":null,"tags":{"property":[[[["string",false],["null",false]],"id","The emoji ID, or null for unicode emoji."],[[["string",false]],"name","The emoji name."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"user","The user that created the emoji, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["null",false]],"guild","The guild this emoji belongs to, or null."],[[["int",false],["null",false]],"createdTimestamp","The timestamp of when this emoji was created, or null for unicode emoji."],[[["bool",false]],"animated","Whether this emoji is animated."],[[["boolean",false]],"managed","Is the emoji managed?"],[[["boolean",false]],"requireColons","Does the emoji require colons?"],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"roles","A collection of roles that this emoji is active for (empty if all)."],[[["\\DateTime",false],["null",false]],"createdAt","An DateTime instance of the createdTimestamp, or null for unicode emoji."],[[["string",false]],"identifier","The identifier for the emoji."],[[["string",false],["null",false]],"url","The URL to the emoji image, or null for unicode emoji."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Emoji.php","relative_file":"\\src\\Models\\Emoji.php","hash":"63a56e2c59384805e772c738095d54be92970721","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"animated":{"name":"animated","line":29,"short_desc":"Whether this emoji is animated.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":29,"short_desc":"An DateTime instance of the createdTimestamp, or null for unicode emoji.","long_desc":null,"hint":[["\\DateTime",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":29,"short_desc":"The timestamp of when this emoji was created, or null for unicode emoji.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":29,"short_desc":"The guild this emoji belongs to, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":29,"short_desc":"The emoji ID, or null for unicode emoji.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"identifier":{"name":"identifier","line":29,"short_desc":"The identifier for the emoji.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"managed":{"name":"managed","line":29,"short_desc":"Is the emoji managed?","long_desc":null,"hint":[["boolean",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":29,"short_desc":"The emoji name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"requireColons":{"name":"requireColons","line":29,"short_desc":"Does the emoji require colons?","long_desc":null,"hint":[["boolean",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"roles":{"name":"roles","line":29,"short_desc":"A collection of roles that this emoji is active for (empty if all).","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"url":{"name":"url","line":29,"short_desc":"The URL to the emoji image, or null for unicode emoji.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"user":{"name":"user","line":29,"short_desc":"The user that created the emoji, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":251,"short_desc":"Automatically converts to a mention.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"addRestrictedRole":{"name":"addRestrictedRole","line":100,"short_desc":"Adds a role to the list of roles that can use this emoji. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":100,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"addRestrictedRoles":{"name":"addRestrictedRoles","line":115,"short_desc":"Adds multiple roles to the list of roles that can use this emoji. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":115,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":true,"is_by_ref":false}}},"delete":{"name":"delete","line":176,"short_desc":"Deletes the emoji.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":176,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":144,"short_desc":"Edits the emoji. Resolves with $this.","long_desc":"Options are as following (at least one required):\n\n<pre>\narray(\n  'name' => string,\n  'roles' => array<string|\\CharlotteDunois\\Yasmin\\Models\\Role>|\\CharlotteDunois\\Yasmin\\Utils\\Collection<string|\\CharlotteDunois\\Yasmin\\Models\\Role>\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":144,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":144,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"removeRestrictedRole":{"name":"removeRestrictedRole","line":194,"short_desc":"Removes a role from the list of roles that can use this emoji. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":194,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"removeRestrictedRoles":{"name":"removeRestrictedRoles","line":217,"short_desc":"Removes multiple roles from the list of roles that can use this emoji. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":217,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":true,"is_by_ref":false}}},"setName":{"name":"setName","line":244,"short_desc":"Sets the new name of the emoji. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException","Throws on unicode emojis."]],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":244,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":244,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\EmojiStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\EmojiStorage","line":15,"short_desc":"Emoji Storage to store emojis, utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\EmojiStorage.php","relative_file":"\\src\\Models\\EmojiStorage.php","hash":"dea6e721b587a568621795255fd52396f886dd1d","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"delete":{"name":"delete","line":67,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":67,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"resolve":{"name":"resolve","line":32,"short_desc":"Resolves given data to an emoji.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Emoji",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"emoji":{"name":"emoji","line":32,"short_desc":"string = emoji ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Emoji",false],["\\CharlotteDunois\\Yasmin\\Models\\MessageReaction",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"set":{"name":"set","line":55,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":55,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":55,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\GroupDMChannel":{"name":"CharlotteDunois\\Yasmin\\Models\\GroupDMChannel","line":17,"short_desc":"Represents a Group DM channel.","long_desc":"","hint":null,"tags":{"property":[[[["string",false],["null",false]],"applicationID","Returns the application ID which created the group DM channel."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\GroupDMChannel.php","relative_file":"\\src\\Models\\GroupDMChannel.php","hash":"0db56c7daa2b99079e8b5390657347a6dabd79b3","parent":"CharlotteDunois\\Yasmin\\Models\\DMChannel","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"applicationID":{"name":"applicationID","line":17,"short_desc":"Returns the application ID which created the group DM channel.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"addRecipient":{"name":"addRecipient","line":37,"short_desc":"Adds the given user to the Group DM channel using the given access token. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":37,"short_desc":"The User instance, or the user ID.","long_desc":null,"hint":[["string",false],["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"accessToken":{"name":"accessToken","line":37,"short_desc":"The OAuth 2.0 access token for the user.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"nick":{"name":"nick","line":37,"short_desc":"The nickname of the user being added.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"removeRecipient":{"name":"removeRecipient","line":55,"short_desc":"Removes the given user from the Group DM channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":55,"short_desc":"The User instance, or the user ID.","long_desc":null,"hint":[["string",false],["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Guild":{"name":"CharlotteDunois\\Yasmin\\Models\\Guild","line":54,"short_desc":"Represents a guild. It's recommended to see if a guild is available before performing operations or reading data from it.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The guild ID."],[[["bool",false]],"available","Whether the guild is available."],[[["string",false]],"name","The guild name."],[[["int",false]],"createdTimestamp","The timestamp when this guild was created."],[[["string",false],["null",false]],"icon","The guild icon hash, or null."],[[["string",false],["null",false]],"splash","The guild splash hash, or null."],[[["string",false]],"ownerID","The ID of the owner."],[[["bool",false]],"large","Whether the guild is considered large."],[[["int",false]],"memberCount","How many members the guild has."],[[["\\CharlotteDunois\\Yasmin\\Models\\ChannelStorage",false]],"channels","Holds a guild's channels, mapped by their ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\EmojiStorage",false]],"emojis","Holds a guild's emojis, mapped by their ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage",false]],"members","Holds a guild's cached members, mapped by their ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\RoleStorage",false]],"roles","Holds a guild's roles, mapped by their ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\PresenceStorage",false]],"presences","Holds a guild's presences of members, mapped by user ID."],[[["string",false]],"defaultMessageNotifications","The type of message that should notify you. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_DEFAULT_MESSAGE_NOTIFICATIONS})"],[[["string",false]],"explicitContentFilter","The explicit content filter level of the guild. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_EXPLICIT_CONTENT_FILTER})"],[[["string",false]],"region","The region the guild is located in."],[[["string",false]],"verificationLevel","The verification level of the guild. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_VERIFICATION_LEVEL})"],[[["string",false],["null",false]],"systemChannelID","The ID of the system channel, or null."],[[["string",false],["null",false]],"afkChannelID","The ID of the afk channel, or null."],[[["int",false],["null",false]],"afkTimeout","The time in seconds before an user is counted as \"away from keyboard\"."],[[["string",true]],"features","An array of guild features."],[[["string",false]],"mfaLevel","The required MFA level for the guild. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_MFA_LEVEL})"],[[["string",false],["null",false]],"applicationID","Application ID of the guild creator, if it is bot-created."],[[["bool",false]],"embedEnabled","Whether the guild is embeddable or not (e.g. widget)."],[[["string",false],["null",false]],"embedChannelID","The ID of the embed channel, or null."],[[["bool",false]],"widgetEnabled","Whether the guild widget is enabled or not."],[[["string",false],["null",false]],"widgetChannelID","The ID of the widget channel, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel",false],["null",false]],"afkChannel","The guild's afk channel, or null."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."],[[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"defaultRole","The guild's default role."],[[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["null",false]],"embedChannel","The guild's embed channel, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"me","The guild member of the client user."],[[["string",false]],"nameAcronym","The acronym that shows up in place of a guild icon."],[[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["null",false]],"systemChannel","The guild's system channel, or null."],[[["bool",false]],"verified","Whether the guild is verified."],[[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["null",false]],"widgetChannel","The guild's widget channel, or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Guild.php","relative_file":"\\src\\Models\\Guild.php","hash":"42e28e4e4668611a8d6873aa6f0b3ab49212582d","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"afkChannel":{"name":"afkChannel","line":54,"short_desc":"The guild's afk channel, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"afkChannelID":{"name":"afkChannelID","line":54,"short_desc":"The ID of the afk channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"afkTimeout":{"name":"afkTimeout","line":54,"short_desc":"The time in seconds before an user is counted as \"away from keyboard\".","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"applicationID":{"name":"applicationID","line":54,"short_desc":"Application ID of the guild creator, if it is bot-created.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"available":{"name":"available","line":54,"short_desc":"Whether the guild is available.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"channels":{"name":"channels","line":54,"short_desc":"Holds a guild's channels, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\ChannelStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":54,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":54,"short_desc":"The timestamp when this guild was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"defaultMessageNotifications":{"name":"defaultMessageNotifications","line":54,"short_desc":"The type of message that should notify you. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_DEFAULT_MESSAGE_NOTIFICATIONS})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"defaultRole":{"name":"defaultRole","line":54,"short_desc":"The guild's default role.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"embedChannel":{"name":"embedChannel","line":54,"short_desc":"The guild's embed channel, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"embedChannelID":{"name":"embedChannelID","line":54,"short_desc":"The ID of the embed channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"embedEnabled":{"name":"embedEnabled","line":54,"short_desc":"Whether the guild is embeddable or not (e.g. widget).","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"emojis":{"name":"emojis","line":54,"short_desc":"Holds a guild's emojis, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\EmojiStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"explicitContentFilter":{"name":"explicitContentFilter","line":54,"short_desc":"The explicit content filter level of the guild. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_EXPLICIT_CONTENT_FILTER})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"features":{"name":"features","line":54,"short_desc":"An array of guild features.","long_desc":null,"hint":[["string",true]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"icon":{"name":"icon","line":54,"short_desc":"The guild icon hash, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":54,"short_desc":"The guild ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"large":{"name":"large","line":54,"short_desc":"Whether the guild is considered large.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"me":{"name":"me","line":54,"short_desc":"The guild member of the client user.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"memberCount":{"name":"memberCount","line":54,"short_desc":"How many members the guild has.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"members":{"name":"members","line":54,"short_desc":"Holds a guild's cached members, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"mfaLevel":{"name":"mfaLevel","line":54,"short_desc":"The required MFA level for the guild. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_MFA_LEVEL})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":54,"short_desc":"The guild name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"nameAcronym":{"name":"nameAcronym","line":54,"short_desc":"The acronym that shows up in place of a guild icon.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"ownerID":{"name":"ownerID","line":54,"short_desc":"The ID of the owner.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"presences":{"name":"presences","line":54,"short_desc":"Holds a guild's presences of members, mapped by user ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\PresenceStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"region":{"name":"region","line":54,"short_desc":"The region the guild is located in.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"roles":{"name":"roles","line":54,"short_desc":"Holds a guild's roles, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\RoleStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"splash":{"name":"splash","line":54,"short_desc":"The guild splash hash, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"systemChannel":{"name":"systemChannel","line":54,"short_desc":"The guild's system channel, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"systemChannelID":{"name":"systemChannelID","line":54,"short_desc":"The ID of the system channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"verificationLevel":{"name":"verificationLevel","line":54,"short_desc":"The verification level of the guild. ({@see \\CharlotteDunois\\Yasmin\\Constants::GUILD_VERIFICATION_LEVEL})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"verified":{"name":"verified","line":54,"short_desc":"Whether the guild is verified.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"widgetChannel":{"name":"widgetChannel","line":54,"short_desc":"The guild's widget channel, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"widgetChannelID":{"name":"widgetChannelID","line":54,"short_desc":"The ID of the widget channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"widgetEnabled":{"name":"widgetEnabled","line":54,"short_desc":"Whether the guild widget is enabled or not.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"addMember":{"name":"addMember","line":183,"short_desc":"Adds the given user to the guild using the OAuth Access Token. Requires the CREATE_INSTANT_INVITE permission. Resolves with $this.","long_desc":"Options are as following (all fields are optional):\n\n<pre>\narray(\n  'nick' => string, (the nickname for the user, requires MANAGE_NICKNAMES permissions)\n  'roles' => array|\\CharlotteDunois\\Yasmin\\Utils\\Collection, (array or Collection of Role instances or role IDs, requires MANAGE_ROLES permission)\n  'mute' => bool, (whether the user is muted, requires MUTE_MEMBERS permission)\n  'deaf' => bool, (whether the user is deafened, requires DEAFEN_MEMBERS permission)\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":183,"short_desc":"A guild member or User instance, or the user ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"accessToken":{"name":"accessToken","line":183,"short_desc":"The OAuth Access Token for the given user.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":183,"short_desc":"Any options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"ban":{"name":"ban","line":232,"short_desc":"Bans the given user. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":232,"short_desc":"A guild member or User instance, or the user ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"days":{"name":"days","line":232,"short_desc":"Number of days of messages to delete (0-7).","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":232,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"createChannel":{"name":"createChannel","line":274,"short_desc":"Creates a new channel in the guild. Resolves with an instance of GuildChannelInterface.","long_desc":"Options are as following (all fields except name are optional):\n\n<pre>\narray(\n  'name' => string,\n  'type' => 'category'|'text'|'voice', (defaults to 'text')\n  'bitrate' => int, (only for voice channels)\n  'userLimit' => int, (only for voice channels, 0 = unlimited)\n  'permissionOverwrites' => \\CharlotteDunois\\Yasmin\\Utils\\Collection|array, (an array or Collection of PermissionOverwrite instances or permission overwrite arrays*)\n  'parent' => \\CharlotteDunois\\Yasmin\\Models\\CategoryChannel|string, (string = channel ID)\n  'nsfw' => bool (only for text channels)\n)\n\n  *  array(\n  *      'id' => string, (an user\/member or role ID)\n  *      'type' => 'member'|'role',\n  *      'allow' => \\CharlotteDunois\\Yasmin\\Models\\Permissions|int,\n  *      'deny' => \\CharlotteDunois\\Yasmin\\Models\\Permissions|int\n  *  )\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":274,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":274,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"createEmoji":{"name":"createEmoji","line":325,"short_desc":"Creates a new custom emoji in the guild. Resolves with an instance of Emoji.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Emoji"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"file":{"name":"file","line":325,"short_desc":"Filepath or URL, or file data.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"name":{"name":"name","line":325,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"roles":{"name":"roles","line":325,"short_desc":"An array or Collection of Role instances or role IDs.","long_desc":null,"hint":[["array",false],["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":null,"default":"array()","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":325,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"createRole":{"name":"createRole","line":375,"short_desc":"Creates a new role in the guild. Resolves with an instance of Role.","long_desc":"Options are as following (all are optional):\n\n<pre>\narray(\n  'name' => string,\n  'permissions' => int|\\CharlotteDunois\\Yasmin\\Models\\Permissions,\n  'color' => int|string,\n  'hoist' => bool,\n  'mentionable' => bool\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Role"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":375,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":375,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"delete":{"name":"delete","line":392,"short_desc":"Deletes the guild.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"edit":{"name":"edit","line":426,"short_desc":"Edits the guild. Resolves with $this.","long_desc":"Options are as following (at least one is required):\n\n<pre>\narray(\n  'name' => string,\n  'region' => string,\n  'verificationLevel' => int,\n  'explicitContentFilter' => int,\n  'defaultMessageNotifications' => int,\n  'afkChannel' => string|\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel|null,\n  'afkTimeout' => int|null,\n  'systemChannel' => string|\\CharlotteDunois\\Yasmin\\Models\\TextChannel|null,\n  'owner' => string|\\CharlotteDunois\\Yasmin\\Models\\GuildMember,\n  'icon' => string, (file path or URL, or data)\n  'splash' => string, (file path or URL, or data)\n  'region' => string|\\CharlotteDunois\\Yasmin\\Models\\VoiceRegion\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":426,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":426,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"fetchAuditLog":{"name":"fetchAuditLog","line":514,"short_desc":"Fetch audit log for the guild. Resolves with an instance of GuildAuditLog.","long_desc":"Options are as following (all are optional):\n\n<pre>\narray(\n  'before' => string|\\CharlotteDunois\\Yasmin\\Models\\GuildAuditLogEntry,\n  'after' => string|\\CharlotteDunois\\Yasmin\\Models\\GuildAuditLogEntry,\n  'limit' => int,\n  'user' => string|\\CharlotteDunois\\Yasmin\\Models\\User,\n  'type' => string|int\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\GuildAuditLog"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":514,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"fetchBans":{"name":"fetchBans","line":539,"short_desc":"Fetch all bans of the guild. Resolves with a Collection of array('reason' => string|null, 'user' => User), mapped by the user ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fetchInvites":{"name":"fetchInvites","line":562,"short_desc":"Fetches all invites of the guild. Resolves with a Collection of Invite instances, mapped by their code.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Invite"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fetchMember":{"name":"fetchMember","line":583,"short_desc":"Fetches a specific guild member. Resolves with an instance of GuildMember.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"userid":{"name":"userid","line":583,"short_desc":"The ID of the guild member.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"fetchMembers":{"name":"fetchMembers","line":601,"short_desc":"Fetches all guild members. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":601,"short_desc":"Limit fetch to members with similar usernames","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false},"limit":{"name":"limit","line":601,"short_desc":"Maximum number of members to request","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false}}},"fetchVoiceRegions":{"name":"fetchVoiceRegions","line":644,"short_desc":"Fetches the guild voice regions. Resolves with a Collection of Voice Region instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\VoiceRegion"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fetchWebhooks":{"name":"fetchWebhooks","line":664,"short_desc":"Fetches the guild's webhooks. Resolves with a Collection of Webhook instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Webhook"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getIconURL":{"name":"getIconURL","line":685,"short_desc":"Returns the guild's icon URL, or null.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"format":{"name":"format","line":685,"short_desc":"One of png, jpg or webp.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"'png'","variadic":false,"is_by_ref":false},"size":{"name":"size","line":685,"short_desc":"One of 128, 256, 512, 1024 or 2048.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":685,"endLine":685}},"default":"null","variadic":false,"is_by_ref":false}}},"getSplashURL":{"name":"getSplashURL","line":699,"short_desc":"Returns the guild's splash URL, or null.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"format":{"name":"format","line":699,"short_desc":"One of png, jpg or webp.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"'png'","variadic":false,"is_by_ref":false},"size":{"name":"size","line":699,"short_desc":"One of 128, 256, 512, 1024 or 2048.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":699,"endLine":699}},"default":"null","variadic":false,"is_by_ref":false}}},"leave":{"name":"leave","line":711,"short_desc":"Leaves the guild.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"pruneMembers":{"name":"pruneMembers","line":726,"short_desc":"Prunes members from the guild based on how long they have been inactive. Resolves with an integer.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"days":{"name":"days","line":726,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"dry":{"name":"dry","line":726,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":726,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setAFKChannel":{"name":"setAFKChannel","line":741,"short_desc":"Edits the AFK channel of the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":741,"short_desc":"","long_desc":null,"hint":[["string",false],["\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel",false],["null",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":741,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setAFKTimeout":{"name":"setAFKTimeout","line":751,"short_desc":"Edits the AFK timeout of the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"timeout":{"name":"timeout","line":751,"short_desc":"","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":751,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setChannelPositions":{"name":"setChannelPositions","line":761,"short_desc":"Batch-updates the guild's channels positions. Channels is an array of channel ID (string)|GuildChannelInterface => position (int) pairs. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channels":{"name":"channels","line":761,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":761,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setExplicitContentFilter":{"name":"setExplicitContentFilter","line":809,"short_desc":"Edits the level of the explicit content filter. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"filter":{"name":"filter","line":809,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":809,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setIcon":{"name":"setIcon","line":819,"short_desc":"Updates the guild icon. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"icon":{"name":"icon","line":819,"short_desc":"A filepath or URL, or data.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":819,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setName":{"name":"setName","line":829,"short_desc":"Edits the name of the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":829,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":829,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setOwner":{"name":"setOwner","line":839,"short_desc":"Sets a new owner for the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"owner":{"name":"owner","line":839,"short_desc":"","long_desc":null,"hint":[["string",false],["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":839,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setRegion":{"name":"setRegion","line":849,"short_desc":"Edits the region of the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"region":{"name":"region","line":849,"short_desc":"","long_desc":null,"hint":[["string",false],["\\CharlotteDunois\\Yasmin\\Models\\VoiceRegion",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":849,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setRolePositions":{"name":"setRolePositions","line":785,"short_desc":"Batch-updates the guild's roles positions. Roles is an array of role ID (string)|Role => position (int) pairs. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"roles":{"name":"roles","line":785,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":785,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setSplash":{"name":"setSplash","line":859,"short_desc":"Updates the guild splash. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"splash":{"name":"splash","line":859,"short_desc":"A filepath or URL, or data.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":859,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setSystemChannel":{"name":"setSystemChannel","line":869,"short_desc":"Edits the system channel of the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":869,"short_desc":"","long_desc":null,"hint":[["string",false],["\\CharlotteDunois\\Yasmin\\Models\\TextChannel",false],["null",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":869,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setVerificationLevel":{"name":"setVerificationLevel","line":879,"short_desc":"Edits the verification level of the guild. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"level":{"name":"level","line":879,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":879,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"unban":{"name":"unban","line":889,"short_desc":"Unbans the given user. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":889,"short_desc":"An User instance or the user ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":889,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\GuildAuditLog":{"name":"CharlotteDunois\\Yasmin\\Models\\GuildAuditLog","line":20,"short_desc":"Represents a guild audit log.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","Which guild this audit log is for."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"entries","Holds the entries, mapped by their ID."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"users","Holds the found users in the audit log, mapped by their ID."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"webhooks","Holds the found webhooks in the audit log, mapped by their ID."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\GuildAuditLog.php","relative_file":"\\src\\Models\\GuildAuditLog.php","hash":"09c42e91b48c3aa857d0836dbf39507a8a05aa1d","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"entries":{"name":"entries","line":20,"short_desc":"Holds the entries, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":20,"short_desc":"Which guild this audit log is for.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"users":{"name":"users","line":20,"short_desc":"Holds the found users in the audit log, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"webhooks":{"name":"webhooks","line":20,"short_desc":"Holds the found webhooks in the audit log, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\GuildAuditLogEntry":{"name":"CharlotteDunois\\Yasmin\\Models\\GuildAuditLogEntry","line":28,"short_desc":"Represents a guild audit log entry.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\GuildAuditLog",false]],"log","The guild audit log which this entry belongs to."],[[["string",false]],"id","The ID of the audit log."],[[["array",true]],"changes","Specific property changes."],[[["string",false]],"userID","The ID of the user which triggered the audit log."],[[["string",false]],"actionType","Specific action type of this entry in its string presentation."],[[["string",false],["null",false]],"reason","The specified reason, or null."],[[["int",false]],"createdTimestamp","When this audit log entry was created."],[[["mixed",false],["null",false]],"extra","Any extra data from the entry, or null."],[[["mixed",false],["null",false]],"target","The target of this entry, or null."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"user","The user which triggered the audit log."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\GuildAuditLogEntry.php","relative_file":"\\src\\Models\\GuildAuditLogEntry.php","hash":"7495f39c7bacdd9422a1dc37733e1d1f29c1b86c","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"actionType":{"name":"actionType","line":28,"short_desc":"Specific action type of this entry in its string presentation.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"changes":{"name":"changes","line":28,"short_desc":"Specific property changes.","long_desc":null,"hint":[["array",true]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":28,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":28,"short_desc":"When this audit log entry was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"extra":{"name":"extra","line":28,"short_desc":"Any extra data from the entry, or null.","long_desc":null,"hint":[["mixed",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":28,"short_desc":"The ID of the audit log.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"log":{"name":"log","line":28,"short_desc":"The guild audit log which this entry belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildAuditLog",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"reason":{"name":"reason","line":28,"short_desc":"The specified reason, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"target":{"name":"target","line":28,"short_desc":"The target of this entry, or null.","long_desc":null,"hint":[["mixed",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"user":{"name":"user","line":28,"short_desc":"The user which triggered the audit log.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"userID":{"name":"userID","line":28,"short_desc":"The ID of the user which triggered the audit log.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"getActionType":{"name":"getActionType","line":207,"short_desc":"Finds the action type from the entry action.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"actionType":{"name":"actionType","line":207,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"getTargetType":{"name":"getTargetType","line":260,"short_desc":"Finds the target type from the entry action.","long_desc":"One of GUILD, CHANNEL, USER, ROLE, INVITE, WEBHOOK, EMOJI, MESSAGE or UNKNOWN.","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"target":{"name":"target","line":260,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}}},"constants":{"ACTION_TYPES":{"name":"ACTION_TYPES","line":33,"short_desc":"All available actions keyed under their names to their numeric values.","long_desc":"","source":null},"TARGET_TYPES":{"name":"TARGET_TYPES","line":67,"short_desc":"Key mirror of all available audit log targets.","long_desc":"","source":null}}},"CharlotteDunois\\Yasmin\\Models\\GuildMember":{"name":"CharlotteDunois\\Yasmin\\Models\\GuildMember","line":43,"short_desc":"Represents a guild member.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The ID of the member."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"user","The User instance of the member."],[[["string",false],["null",false]],"nickname","The nickname of the member, or null."],[[["bool",false]],"deaf","Whether the member is server deafened."],[[["bool",false]],"mute","Whether the member is server muted."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","The guild this member belongs to."],[[["int",false]],"joinedTimestamp","The timestamp of when this member joined."],[[["bool",false]],"selfDeaf","Whether the member is locally deafened."],[[["bool",false]],"selfMute","Whether the member is locally muted."],[[["bool",false]],"speaking","If the member is currently speaking."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"roles","A Collection of all roles the member has, mapped by their ID. ({@see \\CharlotteDunois\\Yasmin\\Models\\Role})"],[[["bool",false]],"suppress","Whether you suppress the member."],[[["string",false],["null",false]],"voiceChannelID","The ID of the voice channel the member is in, or null."],[[["string",false]],"voiceSessionID","The voice session ID, or null."],[[["bool",false]],"bannable","Whether the member is bannable by the client user."],[[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["null",false]],"colorRole","The role of the member used to set their color, or null."],[[["int",false],["null",false]],"displayColor","The displayed color of the member."],[[["string",false],["null",false]],"displayHexColor","The displayed color of the member as hex string."],[[["string",false]],"displayName","The displayed name."],[[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"highestRole","The role of the member with the highest position."],[[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["null",false]],"hoistRole","The role used to show the member separately in the memberlist, or null."],[[["\\DateTime",false]],"joinedAt","An DateTime instance of joinedTimestamp."],[[["bool",false]],"kickable","Whether the guild member is kickable by the client user."],[[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"permissions","The permissions of the member, only taking roles into account."],[[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false]],"presence","The presence of the member in this guild."],[[["\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel",false],["null",false]],"voiceChannel","The voice channel the member is in, if connected to voice, or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\GuildMember.php","relative_file":"\\src\\Models\\GuildMember.php","hash":"a81e158b4ee8b84d182188c9a6293cf7fc0556b8","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"bannable":{"name":"bannable","line":43,"short_desc":"Whether the member is bannable by the client user.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"colorRole":{"name":"colorRole","line":43,"short_desc":"The role of the member used to set their color, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"deaf":{"name":"deaf","line":43,"short_desc":"Whether the member is server deafened.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"displayColor":{"name":"displayColor","line":43,"short_desc":"The displayed color of the member.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"displayHexColor":{"name":"displayHexColor","line":43,"short_desc":"The displayed color of the member as hex string.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"displayName":{"name":"displayName","line":43,"short_desc":"The displayed name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":43,"short_desc":"The guild this member belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"highestRole":{"name":"highestRole","line":43,"short_desc":"The role of the member with the highest position.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"hoistRole":{"name":"hoistRole","line":43,"short_desc":"The role used to show the member separately in the memberlist, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":43,"short_desc":"The ID of the member.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"joinedAt":{"name":"joinedAt","line":43,"short_desc":"An DateTime instance of joinedTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"joinedTimestamp":{"name":"joinedTimestamp","line":43,"short_desc":"The timestamp of when this member joined.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"kickable":{"name":"kickable","line":43,"short_desc":"Whether the guild member is kickable by the client user.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"mute":{"name":"mute","line":43,"short_desc":"Whether the member is server muted.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"nickname":{"name":"nickname","line":43,"short_desc":"The nickname of the member, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissions":{"name":"permissions","line":43,"short_desc":"The permissions of the member, only taking roles into account.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"presence":{"name":"presence","line":43,"short_desc":"The presence of the member in this guild.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"roles":{"name":"roles","line":43,"short_desc":"A Collection of all roles the member has, mapped by their ID. ({@see \\CharlotteDunois\\Yasmin\\Models\\Role})","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"selfDeaf":{"name":"selfDeaf","line":43,"short_desc":"Whether the member is locally deafened.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"selfMute":{"name":"selfMute","line":43,"short_desc":"Whether the member is locally muted.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"speaking":{"name":"speaking","line":43,"short_desc":"If the member is currently speaking.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"suppress":{"name":"suppress","line":43,"short_desc":"Whether you suppress the member.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"user":{"name":"user","line":43,"short_desc":"The User instance of the member.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"voiceChannel":{"name":"voiceChannel","line":43,"short_desc":"The voice channel the member is in, if connected to voice, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"voiceChannelID":{"name":"voiceChannelID","line":43,"short_desc":"The ID of the voice channel the member is in, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"voiceSessionID":{"name":"voiceSessionID","line":43,"short_desc":"The voice session ID, or null.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":434,"short_desc":"Automatically converts to a mention.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"addRole":{"name":"addRole","line":209,"short_desc":"Adds a role to the guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":209,"short_desc":"A role instance or role ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":209,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"addRoles":{"name":"addRoles","line":227,"short_desc":"Adds roles to the guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"roles":{"name":"roles","line":227,"short_desc":"A collection or array of Role instances or role IDs.","long_desc":null,"hint":[["array",false],["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":227,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"ban":{"name":"ban","line":242,"short_desc":"Bans the guild member.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"days":{"name":"days","line":242,"short_desc":"Number of days of messages to delete (0-7).","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":242,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":268,"short_desc":"Edits the guild member. Resolves with $this.","long_desc":"Options are as following (only one required):\n\n<pre>\narray(\n  'nick' => string,\n  'roles' => array|\\CharlotteDunois\\Yasmin\\Utils\\Collection, (of role instances or role IDs)\n  'deaf' => bool,\n  'mute' => bool,\n  'channel' => \\CharlotteDunois\\Yasmin\\Models\\VoiceChannel|string (will move the member to that channel, if member is connected to voice)\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":268,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":268,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"kick":{"name":"kick","line":313,"short_desc":"Kicks the guild member.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":313,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"permissionsIn":{"name":"permissionsIn","line":327,"short_desc":"Returns permissions for a member in a guild channel, taking into account roles and permission overwrites.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":327,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"removeRole":{"name":"removeRole","line":342,"short_desc":"Removes a role from the guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":342,"short_desc":"A role instance or role ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":342,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"removeRoles":{"name":"removeRoles","line":360,"short_desc":"Removes roles from the guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"roles":{"name":"roles","line":360,"short_desc":"A collection or array of role instances (or role IDs).","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false],["\\CharlotteDunois\\Yasmin\\Models\\array<\\CharlotteDunois\\Yasmin\\Models\\Role>",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":360,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setDeaf":{"name":"setDeaf","line":378,"short_desc":"Deafen\/undeafen a guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"deaf":{"name":"deaf","line":378,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":378,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setMute":{"name":"setMute","line":388,"short_desc":"Mute\/unmute a guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"mute":{"name":"mute","line":388,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":388,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setNickname":{"name":"setNickname","line":398,"short_desc":"Set the nickname of the guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"nickname":{"name":"nickname","line":398,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":398,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setRoles":{"name":"setRoles","line":416,"short_desc":"Sets the roles of the guild member. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"roles":{"name":"roles","line":416,"short_desc":"A collection or array of role instances (or role IDs).","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false],["\\CharlotteDunois\\Yasmin\\Models\\array<\\CharlotteDunois\\Yasmin\\Models\\Role>",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":416,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setVoiceChannel":{"name":"setVoiceChannel","line":427,"short_desc":"Moves the guild member to the given voice channel, if connected to voice. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"channel":{"name":"channel","line":427,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\VoiceChannel",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":427,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage","line":15,"short_desc":"Guild Member Storage to store guild members, utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\GuildMemberStorage.php","relative_file":"\\src\\Models\\GuildMemberStorage.php","hash":"ce90f9938bbbe0fb034d11a4c034986d9e32fd4a","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"resolve":{"name":"resolve","line":32,"short_desc":"Resolves given data to a guildmember.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"guildmember":{"name":"guildmember","line":32,"short_desc":"string = user ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\GuildStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\GuildStorage","line":15,"short_desc":"Guild Storage to store guilds, utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\GuildStorage.php","relative_file":"\\src\\Models\\GuildStorage.php","hash":"6d6d67721dc8db76875ce1254134c9f68350998b","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"resolve":{"name":"resolve","line":22,"short_desc":"Resolves given data to a guild.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"guild":{"name":"guild","line":22,"short_desc":"string = guild ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Invite":{"name":"CharlotteDunois\\Yasmin\\Models\\Invite","line":29,"short_desc":"Represents an invite.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"code","The invite code."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["\\CharlotteDunois\\Yasmin\\Models\\PartialGuild",false]],"guild","The guild which this invite belongs to."],[[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false],["\\CharlotteDunois\\Yasmin\\Models\\PartialChannel",false]],"channel","The channel which this invite belongs to."],[[["int",false],["null",false]],"createdTimestamp","When this invite was created, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"inviter","The inviter, or null."],[[["int",false],["null",false]],"maxUses","Maximum uses until the invite expires, or null."],[[["int",false],["null",false]],"maxAge","Duration (in seconds) until the invite expires, or null."],[[["bool",false],["null",false]],"revoked","If the invite is revoked, this will indicate it, or null."],[[["bool",false],["null",false]],"temporary","If this invite grants temporary membership, or null."],[[["int",false],["null",false]],"uses","Number of times this invite has been used, or null."],[[["\\DateTime",false],["null",false]],"createdAt","The DateTime instance of the createdTimestamp, or null."],[[["string",false]],"url","Returns the URL for the invite."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Invite.php","relative_file":"\\src\\Models\\Invite.php","hash":"1b2af5523257d8df183256ab5c651ec3cb13ef1f","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"channel":{"name":"channel","line":29,"short_desc":"The channel which this invite belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface",false],["\\CharlotteDunois\\Yasmin\\Models\\PartialChannel",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"code":{"name":"code","line":29,"short_desc":"The invite code.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":29,"short_desc":"The DateTime instance of the createdTimestamp, or null.","long_desc":null,"hint":[["\\DateTime",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":29,"short_desc":"When this invite was created, or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":29,"short_desc":"The guild which this invite belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["\\CharlotteDunois\\Yasmin\\Models\\PartialGuild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"inviter":{"name":"inviter","line":29,"short_desc":"The inviter, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"maxAge":{"name":"maxAge","line":29,"short_desc":"Duration (in seconds) until the invite expires, or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"maxUses":{"name":"maxUses","line":29,"short_desc":"Maximum uses until the invite expires, or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"revoked":{"name":"revoked","line":29,"short_desc":"If the invite is revoked, this will indicate it, or null.","long_desc":null,"hint":[["bool",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"temporary":{"name":"temporary","line":29,"short_desc":"If this invite grants temporary membership, or null.","long_desc":null,"hint":[["bool",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"url":{"name":"url","line":29,"short_desc":"Returns the URL for the invite.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"uses":{"name":"uses","line":29,"short_desc":"Number of times this invite has been used, or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"delete":{"name":"delete","line":93,"short_desc":"Deletes the invite.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":93,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Message":{"name":"CharlotteDunois\\Yasmin\\Models\\Message","line":41,"short_desc":"Represents a message.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The message ID."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"author","The user that created the message."],[[["\\CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface",false]],"channel","The channel this message was created in."],[[["int",false]],"createdTimestamp","The timestamp of when this message was created."],[[["int",false],["null",false]],"editedTimestamp","The timestamp of when this message was edited, or null."],[[["string",false]],"content","The message content."],[[["string",false]],"cleanContent","The message content with all mentions replaced."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"attachments","A collection of attachments in the message - mapped by their ID. ({@see \\CharlotteDunois\\Yasmin\\Models\\MessageAttachment})"],[[["\\CharlotteDunois\\Yasmin\\Models\\MessageEmbed",true]],"embeds","An array of embeds in the message."],[[["\\CharlotteDunois\\Yasmin\\Models\\MessageMentions",false]],"mentions","All valid mentions that the message contains."],[[["bool",false]],"tts","Whether or not the message was Text-To-Speech."],[[["string",false],["null",false]],"nonce","A random number or string used for checking message delivery, or null."],[[["bool",false]],"pinned","Whether the message is pinned or not."],[[["bool",false]],"system","Whether the message is a system message."],[[["string",false]],"type","The type of the message. ({@see \\CharlotteDunois\\Yasmin\\Constants::MESSAGE_TYPES})"],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"reactions","A collection of message reactions, mapped by ID (or name). ({@see \\CharlotteDunois\\Yasmin\\Models\\MessageReaction})"],[[["string",false],["null",false]],"webhookID","ID of the webhook that sent the message, if applicable, or null."],[[["\\DateTime",false]],"createdAt","An DateTime instance of the createdTimestamp."],[[["\\DateTime",false],["null",false]],"editedAt","An DateTime instance of the editedTimestamp, or null."],[[["bool",false]],"deletable","Whether the client user can delete the message."],[[["bool",false]],"editable","Whether the client user can edit the message."],[[["bool",false]],"pinnable","Whether the client user can pin the message."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["null",false]],"guild","The correspondending guild (if message posted in a guild), or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["null",false]],"member","The correspondending guildmember of the author (if message posted in a guild), or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Message.php","relative_file":"\\src\\Models\\Message.php","hash":"e1d0f722bf723613a321648b5265efb4a758ef15","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"attachments":{"name":"attachments","line":41,"short_desc":"A collection of attachments in the message - mapped by their ID. ({@see \\CharlotteDunois\\Yasmin\\Models\\MessageAttachment})","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"author":{"name":"author","line":41,"short_desc":"The user that created the message.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"channel":{"name":"channel","line":41,"short_desc":"The channel this message was created in.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"cleanContent":{"name":"cleanContent","line":41,"short_desc":"The message content with all mentions replaced.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"content":{"name":"content","line":41,"short_desc":"The message content.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":41,"short_desc":"An DateTime instance of the createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":41,"short_desc":"The timestamp of when this message was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"deletable":{"name":"deletable","line":41,"short_desc":"Whether the client user can delete the message.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"editable":{"name":"editable","line":41,"short_desc":"Whether the client user can edit the message.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"editedAt":{"name":"editedAt","line":41,"short_desc":"An DateTime instance of the editedTimestamp, or null.","long_desc":null,"hint":[["\\DateTime",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"editedTimestamp":{"name":"editedTimestamp","line":41,"short_desc":"The timestamp of when this message was edited, or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"embeds":{"name":"embeds","line":41,"short_desc":"An array of embeds in the message.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\MessageEmbed",true]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":41,"short_desc":"The correspondending guild (if message posted in a guild), or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":41,"short_desc":"The message ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"member":{"name":"member","line":41,"short_desc":"The correspondending guildmember of the author (if message posted in a guild), or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"mentions":{"name":"mentions","line":41,"short_desc":"All valid mentions that the message contains.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\MessageMentions",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"nonce":{"name":"nonce","line":41,"short_desc":"A random number or string used for checking message delivery, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"pinnable":{"name":"pinnable","line":41,"short_desc":"Whether the client user can pin the message.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"pinned":{"name":"pinned","line":41,"short_desc":"Whether the message is pinned or not.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"reactions":{"name":"reactions","line":41,"short_desc":"A collection of message reactions, mapped by ID (or name). ({@see \\CharlotteDunois\\Yasmin\\Models\\MessageReaction})","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"replySeparator":{"name":"replySeparator","line":46,"short_desc":"The string used in Message::reply to separate the mention and the content.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"default":{"nodeType":"Scalar_String","value":" ","attributes":{"startLine":46,"endLine":46,"kind":1}},"errors":[],"source":null},"system":{"name":"system","line":41,"short_desc":"Whether the message is a system message.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"tts":{"name":"tts","line":41,"short_desc":"Whether or not the message was Text-To-Speech.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":41,"short_desc":"The type of the message. ({@see \\CharlotteDunois\\Yasmin\\Constants::MESSAGE_TYPES})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"webhookID":{"name":"webhookID","line":41,"short_desc":"ID of the webhook that sent the message, if applicable, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":368,"short_desc":"Automatically converts to the message content.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"clearReactions":{"name":"clearReactions","line":156,"short_desc":"Removes all reactions from the message. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"collectReactions":{"name":"collectReactions","line":183,"short_desc":"Collects reactions during a specific duration. Resolves with a Collection of MessageReaction instances, mapped by their IDs or names (unicode emojis).","long_desc":"Options are as following:\n\n<pre>\narray(\n  'max' => int, (max. message reactions to collect)\n  'time' => int, (duration, in seconds, default 30)\n  'errors' => array, (optional, which failed \"conditions\" (max not reached in time (\"time\")) lead to a rejected promise, defaults to [])\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\MessageReaction"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"filter":{"name":"filter","line":183,"short_desc":"The filter to only collect desired reactions.","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":183,"short_desc":"The collector options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"delete":{"name":"delete","line":248,"short_desc":"Deletes the message.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"timeout":{"name":"timeout","line":248,"short_desc":"An integer or float as timeout in seconds, after which the message gets deleted.","long_desc":null,"hint":[["float",false],["int",false]],"tags":[],"modifiers":null,"default":"0","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":248,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":224,"short_desc":"Edits the message. You need to be the author of the message. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::send()"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"content":{"name":"content","line":224,"short_desc":"The message contents.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":224,"endLine":224}},"default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":224,"short_desc":"An array with options. Only embed is supported by edit.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"fetchWebhook":{"name":"fetchWebhook","line":268,"short_desc":"Fetches the webhook used to create this message. Resolves with an instance of Webhook.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Webhook"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException",""]],"errors":[],"example":null,"source":null,"parameters":[]},"pin":{"name":"pin","line":285,"short_desc":"Pins the message. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"react":{"name":"react","line":299,"short_desc":"Reacts to the message with the specified unicode or custom emoji. Resolves with an instance of MessageReaction","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\MessageReaction"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"emoji":{"name":"emoji","line":299,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Emoji",false],["\\CharlotteDunois\\Yasmin\\Models\\MessageReaction",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"reply":{"name":"reply","line":349,"short_desc":"Replies to the message. Resolves with an instance of Message, or with a Collection of Message instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::send()"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"content":{"name":"content","line":349,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":349,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"unpin":{"name":"unpin","line":357,"short_desc":"Unpins the message. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\MessageAttachment":{"name":"CharlotteDunois\\Yasmin\\Models\\MessageAttachment","line":25,"short_desc":"Represents an attachment (from a message).","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The attachment ID."],[[["string",false]],"filename","The filename."],[[["int",false]],"size","The filename in bytes."],[[["string",false]],"url","The url to the file."],[[["int",false],["null",false]],"height","The height (if image), or null."],[[["int",false],["null",false]],"width","The width (if image), or null."],[[["int",false]],"createdTimestamp","The timestamp of when this attachment was created."],[[["\\DateTime",false]],"createdAt","An DateTime instance of the createdTimestamp."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\MessageAttachment.php","relative_file":"\\src\\Models\\MessageAttachment.php","hash":"0a3b9d14df2c282e2208e5dff96ae005f696309a","parent":"CharlotteDunois\\Yasmin\\Models\\Base","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"createdAt":{"name":"createdAt","line":25,"short_desc":"An DateTime instance of the createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":25,"short_desc":"The timestamp of when this attachment was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"filename":{"name":"filename","line":25,"short_desc":"The filename.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"height":{"name":"height","line":25,"short_desc":"The height (if image), or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":25,"short_desc":"The attachment ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"size":{"name":"size","line":25,"short_desc":"The filename in bytes.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"url":{"name":"url","line":25,"short_desc":"The url to the file.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"width":{"name":"width","line":25,"short_desc":"The width (if image), or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":44,"short_desc":"Constructs a new instance.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"attachment":{"name":"attachment","line":44,"short_desc":"This parameter is used internally and should not be used.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"setAttachment":{"name":"setAttachment","line":83,"short_desc":"Sets the attachment. Requires allow_url_fopen to be enabled in the php.ini for URLs.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"attachment":{"name":"attachment","line":83,"short_desc":"An URL or the filepath, or the data.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"filename":{"name":"filename","line":83,"short_desc":"The filename.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\MessageEmbed":{"name":"CharlotteDunois\\Yasmin\\Models\\MessageEmbed","line":30,"short_desc":"Represents a received embed from a message. This class can also be used to make a Rich Embed.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"type","The embed type."],[[["string",false],["null",false]],"title","The title, or null."],[[["array",false],["null",false]],"author","The author (array of name, icon, url), or null."],[[["string",false],["null",false]],"description","The description, or null."],[[["string",false],["null",false]],"url","The URL, or null."],[[["int",false],["string",false],["null",false]],"timestamp","The timestamp, or the set timestamp (as ISO string), or null."],[[["int",false],["null",false]],"color","The color, or null."],[[["array",false],["null",false]],"footer","The author (array of name, icon), or null."],[[["array",false],["null",false]],"image","The image (array of url, height, width), or null."],[[["array",false],["null",false]],"thumbnail","The thumbnail (array of url, height, width), or null."],[[["array",false],["null",false]],"video","The video (array of url, height, width), or null."],[[["array",false],["null",false]],"provider","The provider (array of name, url), or null."],[[["\\DateTime",false],["null",false]],"datetime","The DateTime instance of timestamp, or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\MessageEmbed.php","relative_file":"\\src\\Models\\MessageEmbed.php","hash":"bab31b6dcb60a5f236470ae2c667e11326b0335e","parent":"CharlotteDunois\\Yasmin\\Models\\Base","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"author":{"name":"author","line":30,"short_desc":"The author (array of name, icon, url), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"color":{"name":"color","line":30,"short_desc":"The color, or null.","long_desc":null,"hint":[["int",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"datetime":{"name":"datetime","line":30,"short_desc":"The DateTime instance of timestamp, or null.","long_desc":null,"hint":[["\\DateTime",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"description":{"name":"description","line":30,"short_desc":"The description, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"footer":{"name":"footer","line":30,"short_desc":"The author (array of name, icon), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"image":{"name":"image","line":30,"short_desc":"The image (array of url, height, width), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"provider":{"name":"provider","line":30,"short_desc":"The provider (array of name, url), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"thumbnail":{"name":"thumbnail","line":30,"short_desc":"The thumbnail (array of url, height, width), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"timestamp":{"name":"timestamp","line":30,"short_desc":"The timestamp, or the set timestamp (as ISO string), or null.","long_desc":null,"hint":[["int",false],["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"title":{"name":"title","line":30,"short_desc":"The title, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":30,"short_desc":"The embed type.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"url":{"name":"url","line":30,"short_desc":"The URL, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"video":{"name":"video","line":30,"short_desc":"The video (array of url, height, width), or null.","long_desc":null,"hint":[["array",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":49,"short_desc":"Constructs a new instance.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"embed":{"name":"embed","line":49,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"addField":{"name":"addField","line":267,"short_desc":"Adds a field to this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\RangeException|\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"title":{"name":"title","line":267,"short_desc":"Maximum length is 256 characters.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":267,"short_desc":"Maximum length is 1024 characters.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"inline":{"name":"inline","line":267,"short_desc":"Whether this field gets shown with other inline fields on one line.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"setAuthor":{"name":"setAuthor","line":137,"short_desc":"Set the author of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":137,"short_desc":"Maximum length is 256 characters.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"iconurl":{"name":"iconurl","line":137,"short_desc":"The URL to the icon.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false},"url":{"name":"url","line":137,"short_desc":"The URL to the author.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setColor":{"name":"setColor","line":160,"short_desc":"Set the color of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Utils\\DataHelpers::resolveColor()"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"color":{"name":"color","line":160,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"setDescription":{"name":"setDescription","line":171,"short_desc":"Set the description of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"description":{"name":"description","line":171,"short_desc":"Maxiumum length is 2048 characters.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"setFooter":{"name":"setFooter","line":189,"short_desc":"Set the footer of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"text":{"name":"text","line":189,"short_desc":"Maximum length is 2048 characters.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"iconurl":{"name":"iconurl","line":189,"short_desc":"The URL to the icon.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setImage":{"name":"setImage","line":209,"short_desc":"Set the image of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"url":{"name":"url","line":209,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"setThumbnail":{"name":"setThumbnail","line":219,"short_desc":"Set the thumbnail of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"url":{"name":"url","line":219,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"setTimestamp":{"name":"setTimestamp","line":229,"short_desc":"Set the timestamp of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"timestamp":{"name":"timestamp","line":229,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":229,"endLine":229}},"default":"null","variadic":false,"is_by_ref":false}}},"setTitle":{"name":"setTitle","line":240,"short_desc":"Set the title of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"title":{"name":"title","line":240,"short_desc":"Maximum length is 256 characters.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"setURL":{"name":"setURL","line":254,"short_desc":"Set the URL of this embed.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"url":{"name":"url","line":254,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\MessageMentions":{"name":"CharlotteDunois\\Yasmin\\Models\\MessageMentions","line":22,"short_desc":"Holds message mentions.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"message","The message this reaction belongs to."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"channels","The collection which holds all channel mentions."],[[["bool",false]],"everyone","Whether the message mentions @everyone or @here."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"members","The collection which holds all members mentions (only in guild channels). Only cached members can be put into this Collection."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"roles","The collection which holds all roles mentions."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"users","The collection which holds all users mentions."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\MessageMentions.php","relative_file":"\\src\\Models\\MessageMentions.php","hash":"372f9a8295b4508ed728ba58da82ccc870fc2514","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"channels":{"name":"channels","line":22,"short_desc":"The collection which holds all channel mentions.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"everyone":{"name":"everyone","line":22,"short_desc":"Whether the message mentions @everyone or @here.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"members":{"name":"members","line":22,"short_desc":"The collection which holds all members mentions (only in guild channels). Only cached members can be put into this Collection.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"message":{"name":"message","line":22,"short_desc":"The message this reaction belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"roles":{"name":"roles","line":22,"short_desc":"The collection which holds all roles mentions.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"users":{"name":"users","line":22,"short_desc":"The collection which holds all users mentions.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":{"PATTERN_CHANNELS":{"name":"PATTERN_CHANNELS","line":27,"short_desc":"RegEx pattern to match channel mentions.","long_desc":"","source":null},"PATTERN_EMOJIS":{"name":"PATTERN_EMOJIS","line":33,"short_desc":"RegEx pattern to match custom emoji mentions.","long_desc":"","source":null},"PATTERN_ROLES":{"name":"PATTERN_ROLES","line":39,"short_desc":"RegEx pattern to match role mentions.","long_desc":"","source":null},"PATTERN_USERS":{"name":"PATTERN_USERS","line":45,"short_desc":"RegEx pattern to match user mentions.","long_desc":"","source":null}}},"CharlotteDunois\\Yasmin\\Models\\MessageReaction":{"name":"CharlotteDunois\\Yasmin\\Models\\MessageReaction","line":21,"short_desc":"Represents a message reaction.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\Emoji",false]],"emoji","The emoji this message reaction is for."],[[["int",false]],"count","Times this emoji has been reacted."],[[["bool",false]],"me","Whether the current user has reacted using this emoji."],[[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"message","The message this reaction belongs to."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"users","The users that have given this reaction, mapped by their ID."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\MessageReaction.php","relative_file":"\\src\\Models\\MessageReaction.php","hash":"a9665862b42be7c059aec1c77375d878591f1ca2","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"count":{"name":"count","line":21,"short_desc":"Times this emoji has been reacted.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"emoji":{"name":"emoji","line":21,"short_desc":"The emoji this message reaction is for.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Emoji",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"me":{"name":"me","line":21,"short_desc":"Whether the current user has reacted using this emoji.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"message":{"name":"message","line":21,"short_desc":"The message this reaction belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"users":{"name":"users","line":21,"short_desc":"The users that have given this reaction, mapped by their ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"fetchUsers":{"name":"fetchUsers","line":64,"short_desc":"Fetches all the users that gave this reaction. Resolves with a Collection of User instances, mapped by their IDs.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\User"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"limit":{"name":"limit","line":64,"short_desc":"The maximum amount of users to fetch, defaults to 100.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"100","variadic":false,"is_by_ref":false},"before":{"name":"before","line":64,"short_desc":"Limit fetching users to those with an ID smaller than the given ID.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false},"after":{"name":"after","line":64,"short_desc":"Limit fetching users to those with an ID greater than the given ID.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"remove":{"name":"remove","line":93,"short_desc":"Removes an user from the reaction. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":93,"short_desc":"Defaults to the client user.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\MessageStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\MessageStorage","line":15,"short_desc":"Message Storage to store and handle messages, utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\MessageStorage.php","relative_file":"\\src\\Models\\MessageStorage.php","hash":"64d865f73d41ebc4cbe658e1ef7eba72a3f74067","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"sweep":{"name":"sweep","line":47,"short_desc":"Sweeps messages, deletes messages older than the parameter (timestamp - $time).","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"time":{"name":"time","line":47,"short_desc":"0 = clear all","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\OAuthApplication":{"name":"CharlotteDunois\\Yasmin\\Models\\OAuthApplication","line":24,"short_desc":"Represents an OAuth Application.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The application ID."],[[["string",false]],"name","The name of the application."],[[["string",false],["null",false]],"icon","The hash of the application hash, or null."],[[["string",false],["null",false]],"description","The application's description, or null."],[[["string",true],["null",false]],"rpcOrigins","An array of RPC origin url strings, if RPC is enabled, or null."],[[["bool",false]],"botPublic","Whether the bot is public."],[[["bool",false]],"botRequireCodeGrant","Whether the bot requires a code grant (full OAuth flow)."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"owner","The User instance of the owner, or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\OAuthApplication.php","relative_file":"\\src\\Models\\OAuthApplication.php","hash":"148e7a101b05eae18830484294f769415adfb869","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"botPublic":{"name":"botPublic","line":24,"short_desc":"Whether the bot is public.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"botRequireCodeGrant":{"name":"botRequireCodeGrant","line":24,"short_desc":"Whether the bot requires a code grant (full OAuth flow).","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"description":{"name":"description","line":24,"short_desc":"The application's description, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"icon":{"name":"icon","line":24,"short_desc":"The hash of the application hash, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":24,"short_desc":"The application ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":24,"short_desc":"The name of the application.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"owner":{"name":"owner","line":24,"short_desc":"The User instance of the owner, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"rpcOrigins":{"name":"rpcOrigins","line":24,"short_desc":"An array of RPC origin url strings, if RPC is enabled, or null.","long_desc":null,"hint":[["string",true],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":81,"short_desc":"Automatically converts the OAuth Application instance to the application name.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getIconURL":{"name":"getIconURL","line":70,"short_desc":"Returns the application's icon URL, or null.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"format":{"name":"format","line":70,"short_desc":"One of png, jpg or webp.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"'png'","variadic":false,"is_by_ref":false},"size":{"name":"size","line":70,"short_desc":"One of 128, 256, 512, 1024 or 2048.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":70,"endLine":70}},"default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\PartialChannel":{"name":"CharlotteDunois\\Yasmin\\Models\\PartialChannel","line":22,"short_desc":"Represents a partial channel.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The channel ID."],[[["string",false]],"name","The channel name."],[[["int",false]],"createdTimestamp","The timestamp when this channel was created."],[[["string",false]],"type","The type of the channel."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\PartialChannel.php","relative_file":"\\src\\Models\\PartialChannel.php","hash":"aeeda57e15c4e3e3826a253c1346df2465b9a62e","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface"},"traits":[],"source":null,"properties":{"createdAt":{"name":"createdAt","line":22,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":22,"short_desc":"The timestamp when this channel was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":22,"short_desc":"The channel ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":22,"short_desc":"The channel name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":22,"short_desc":"The type of the channel.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\PartialGuild":{"name":"CharlotteDunois\\Yasmin\\Models\\PartialGuild","line":23,"short_desc":"Represents a partial guild.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The guild ID."],[[["string",false]],"name","The guild name."],[[["int",false]],"createdTimestamp","The timestamp when this guild was created."],[[["string",false],["null",false]],"icon","The guild icon, or null."],[[["string",false],["null",false]],"splash","The guild splash, or null."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\PartialGuild.php","relative_file":"\\src\\Models\\PartialGuild.php","hash":"10287241e0bec87bf861934c13e08274379d0ecb","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"createdAt":{"name":"createdAt","line":23,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":23,"short_desc":"The timestamp when this guild was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"icon":{"name":"icon","line":23,"short_desc":"The guild icon, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":23,"short_desc":"The guild ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":23,"short_desc":"The guild name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"splash":{"name":"splash","line":23,"short_desc":"The guild splash, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"getIconURL":{"name":"getIconURL","line":71,"short_desc":"Returns the guild's icon URL, or null.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"format":{"name":"format","line":71,"short_desc":"One of png, jpg or webp.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"'png'","variadic":false,"is_by_ref":false},"size":{"name":"size","line":71,"short_desc":"One of 128, 256, 512, 1024 or 2048.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":71,"endLine":71}},"default":"null","variadic":false,"is_by_ref":false}}},"getSplashURL":{"name":"getSplashURL","line":85,"short_desc":"Returns the guild's splash URL, or null.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"format":{"name":"format","line":85,"short_desc":"One of png, jpg or webp.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"'png'","variadic":false,"is_by_ref":false},"size":{"name":"size","line":85,"short_desc":"One of 128, 256, 512, 1024 or 2048.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":85,"endLine":85}},"default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite":{"name":"CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite","line":24,"short_desc":"Represents a permission overwrite.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The ID of the Permission Overwrite."],[[["string",false]],"type","The type of the overwrite (member or role)."],[[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["null",false]],"target","The role or guildmember, or null if not a member."],[[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"allow","The allowed Permissions instance."],[[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"deny","The denied Permissions instance."],[[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false]],"channel","The channel this Permission Overwrite belongs to."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","The guild this Permission Overwrite belongs to."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\PermissionOverwrite.php","relative_file":"\\src\\Models\\PermissionOverwrite.php","hash":"73c7befd868b80beaab2a7a300369d9546aec248","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"allow":{"name":"allow","line":24,"short_desc":"The allowed Permissions instance.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"channel":{"name":"channel","line":24,"short_desc":"The channel this Permission Overwrite belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"deny":{"name":"deny","line":24,"short_desc":"The denied Permissions instance.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":24,"short_desc":"The guild this Permission Overwrite belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":24,"short_desc":"The ID of the Permission Overwrite.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"target":{"name":"target","line":24,"short_desc":"The role or guildmember, or null if not a member.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":24,"short_desc":"The type of the overwrite (member or role).","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"delete":{"name":"delete","line":120,"short_desc":"Deletes the permission overwrite.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":120,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":75,"short_desc":"Edits the permission overwrite. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"allow":{"name":"allow","line":75,"short_desc":"Which permissions should be allowed?","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false],["int",false],["null",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"deny":{"name":"deny","line":75,"short_desc":"Which permissions should be denied?","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false],["int",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":75,"short_desc":"The reason for this.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Permissions":{"name":"CharlotteDunois\\Yasmin\\Models\\Permissions","line":17,"short_desc":"Permissions. Something fabulous.","long_desc":"","hint":null,"tags":{"property":[[[["int",false]],"bitfield","The bitfield value."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Permissions.php","relative_file":"\\src\\Models\\Permissions.php","hash":"f0d2bdb8a20d363ab911c56eb24101255d43f5ad","parent":"CharlotteDunois\\Yasmin\\Models\\Base","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"bitfield":{"name":"bitfield","line":17,"short_desc":"The bitfield value.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"Constructs a new instance.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"permission":{"name":"permission","line":25,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false}}},"add":{"name":"add","line":93,"short_desc":"Adds permissions to these ones.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissions":{"name":"permissions","line":93,"short_desc":"","long_desc":null,"hint":[["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":true,"is_by_ref":false}}},"has":{"name":"has","line":57,"short_desc":"Checks if a given permission is granted.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissions":{"name":"permissions","line":57,"short_desc":"","long_desc":null,"hint":[["array",false],["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"checkAdmin":{"name":"checkAdmin","line":57,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false}}},"missing":{"name":"missing","line":83,"short_desc":"Checks if a given permission is missing.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissions":{"name":"permissions","line":83,"short_desc":"","long_desc":null,"hint":[["array",false],["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"checkAdmin":{"name":"checkAdmin","line":83,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false}}},"remove":{"name":"remove","line":110,"short_desc":"Removes permissions from these ones.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Models\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissions":{"name":"permissions","line":110,"short_desc":"","long_desc":null,"hint":[["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":true,"is_by_ref":false}}},"resolve":{"name":"resolve","line":127,"short_desc":"Resolves a permission name to number.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permission":{"name":"permission","line":127,"short_desc":"","long_desc":null,"hint":[["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"resolveToName":{"name":"resolveToName","line":143,"short_desc":"Resolves a permission number to the name. Also checks if a given name is a valid permission.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permission":{"name":"permission","line":143,"short_desc":"","long_desc":null,"hint":[["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":{"ALL":{"name":"ALL","line":18,"short_desc":"","long_desc":"","source":null}}},"CharlotteDunois\\Yasmin\\Models\\Presence":{"name":"CharlotteDunois\\Yasmin\\Models\\Presence","line":19,"short_desc":"Represents a presence.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"user","The user this presence belongs to."],[[["\\CharlotteDunois\\Yasmin\\Models\\Activity",false],["null",false]],"activity","The activity the user is doing, or null."],[[["string",false]],"status","What do you expect this to be?"]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Presence.php","relative_file":"\\src\\Models\\Presence.php","hash":"b47911200b4b6ea0c8a314c4afbc387e4885d3b3","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"activity":{"name":"activity","line":19,"short_desc":"The activity the user is doing, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Activity",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"status":{"name":"status","line":19,"short_desc":"What do you expect this to be?","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"user":{"name":"user","line":19,"short_desc":"The user this presence belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":43,"short_desc":"The manual creation of such an instance is discouraged. There may be an easy and safe way to create such an instance in the future.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"client":{"name":"client","line":43,"short_desc":"The client this instance is for.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Client",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Client"],"attributes":{"startLine":43,"endLine":43}},"default":null,"variadic":false,"is_by_ref":false},"presence":{"name":"presence","line":43,"short_desc":"An array containing user (as array, with an element id), activity (as array) and status.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\PresenceStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\PresenceStorage","line":15,"short_desc":"Presence Storage, which utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\PresenceStorage.php","relative_file":"\\src\\Models\\PresenceStorage.php","hash":"0b2cbff82522c52c6b5a652b5f3ca7e188fb847e","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"delete":{"name":"delete","line":57,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":57,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"resolve":{"name":"resolve","line":22,"short_desc":"Resolves given data to a presence.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"presence":{"name":"presence","line":22,"short_desc":"string = user ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false],["\\CharlotteDunois\\Yasmin\\Models\\User",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"set":{"name":"set","line":45,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":45,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":45,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets":{"name":"CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets","line":21,"short_desc":"Rich Presence assets.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\Activity",false]],"activity","The activity which these assets belong to."],[[["string",false],["null",false]],"largeImage","The ID of the large image, or null."],[[["string",false],["null",false]],"largeText","The text of the large image, or null."],[[["string",false],["null",false]],"smallImage","The ID of the small image, or null."],[[["string",false],["null",false]],"smallText","The text of the small image, or null."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\RichPresenceAssets.php","relative_file":"\\src\\Models\\RichPresenceAssets.php","hash":"09720a3b6f1856ce1f7624c1a9b993aacadee4e5","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"activity":{"name":"activity","line":21,"short_desc":"The activity which these assets belong to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Activity",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"largeImage":{"name":"largeImage","line":21,"short_desc":"The ID of the large image, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"largeText":{"name":"largeText","line":21,"short_desc":"The text of the large image, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"smallImage":{"name":"smallImage","line":21,"short_desc":"The ID of the small image, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"smallText":{"name":"smallText","line":21,"short_desc":"The text of the small image, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"getLargeImageURL":{"name":"getLargeImageURL","line":64,"short_desc":"Returns the URL of the large image.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"size":{"name":"size","line":64,"short_desc":"Any powers of 2.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"null","variadic":false,"is_by_ref":false}}},"getSmallImageURL":{"name":"getSmallImageURL","line":77,"short_desc":"Returns the URL of the small image.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"size":{"name":"size","line":77,"short_desc":"Any powers of 2.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Role":{"name":"CharlotteDunois\\Yasmin\\Models\\Role","line":32,"short_desc":"Represents a role.","long_desc":"","hint":null,"tags":{"property":[[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","The guild the role belongs to."],[[["string",false]],"id","The role ID."],[[["string",false]],"name","The role name."],[[["int",false]],"createdTimestamp","When the role was created."],[[["int",false]],"color","The color of the role."],[[["bool",false]],"hoist","Whether the role gets displayed separately in the member list."],[[["int",false]],"position","The position of the role in the API."],[[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"permissions","The permissions of the role."],[[["bool",false]],"managed","Whether the role is managed by an integration."],[[["bool",false]],"mentionable","Whether the role is mentionable."],[[["int",false]],"calculatedPosition","The role position in the role manager."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."],[[["bool",false]],"editable","Whether the role can be edited by the client user."],[[["string",false]],"hexColor","Returns the hex color of the role color."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"members","A collection of all (cached) guild members which have the role."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Role.php","relative_file":"\\src\\Models\\Role.php","hash":"21af2a590cd1d9e7c0cd2da9f928ff671aa69f1f","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"calculatedPosition":{"name":"calculatedPosition","line":32,"short_desc":"The role position in the role manager.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"color":{"name":"color","line":32,"short_desc":"The color of the role.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":32,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":32,"short_desc":"When the role was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"editable":{"name":"editable","line":32,"short_desc":"Whether the role can be edited by the client user.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":32,"short_desc":"The guild the role belongs to.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"hexColor":{"name":"hexColor","line":32,"short_desc":"Returns the hex color of the role color.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"hoist":{"name":"hoist","line":32,"short_desc":"Whether the role gets displayed separately in the member list.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":32,"short_desc":"The role ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"managed":{"name":"managed","line":32,"short_desc":"Whether the role is managed by an integration.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"members":{"name":"members","line":32,"short_desc":"A collection of all (cached) guild members which have the role.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"mentionable":{"name":"mentionable","line":32,"short_desc":"Whether the role is mentionable.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":32,"short_desc":"The role name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissions":{"name":"permissions","line":32,"short_desc":"The permissions of the role.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"position":{"name":"position","line":32,"short_desc":"The position of the role in the API.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":266,"short_desc":"Automatically converts to a mention.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"comparePositionTo":{"name":"comparePositionTo","line":115,"short_desc":"Compares the position from the role to the given role.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":115,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","Role"],"attributes":{"startLine":115,"endLine":115}},"default":null,"variadic":false,"is_by_ref":false}}},"delete":{"name":"delete","line":188,"short_desc":"Deletes the role.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":188,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":145,"short_desc":"Edits the role with the given options. Resolves with $this.","long_desc":"Options are as following (only one is required):\n\n<pre>\narray(\n  'name' => string,\n  'color' => int|string,\n  'hoist' => bool,\n  'position' => int,\n  'permissions' => int|\\CharlotteDunois\\Yasmin\\Models\\Permissions,\n  'mentionable' => bool\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Utils\\DataHelpers::resolveColor()"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":145,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":145,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setColor":{"name":"setColor","line":204,"short_desc":"Set the color of the role. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Utils\\DataHelpers::resolveColor()"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"color":{"name":"color","line":204,"short_desc":"","long_desc":null,"hint":[["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":204,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setHoist":{"name":"setHoist","line":215,"short_desc":"Set whether or not the role should be hoisted. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"hoist":{"name":"hoist","line":215,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":215,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setMentionable":{"name":"setMentionable","line":226,"short_desc":"Set whether the role is mentionable. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"mentionable":{"name":"mentionable","line":226,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":226,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setName":{"name":"setName","line":237,"short_desc":"Set a new name for the role. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":237,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":237,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPermissions":{"name":"setPermissions","line":248,"short_desc":"Set the permissions of the role. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissions":{"name":"permissions","line":248,"short_desc":"","long_desc":null,"hint":[["int",false],["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":248,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPosition":{"name":"setPosition","line":259,"short_desc":"Set the position of the role. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"position":{"name":"position","line":259,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":259,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\RoleStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\RoleStorage","line":15,"short_desc":"Role Storage to store a guild's roles, utilizes Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\RoleStorage.php","relative_file":"\\src\\Models\\RoleStorage.php","hash":"15286c97ebc1218fd9af93a570d3429fa6a4c7c1","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"resolve":{"name":"resolve","line":32,"short_desc":"Resolves given data to a Role.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"role":{"name":"role","line":32,"short_desc":"string = role ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Storage":{"name":"CharlotteDunois\\Yasmin\\Models\\Storage","line":15,"short_desc":"Base class for all storages.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Storage.php","relative_file":"\\src\\Models\\Storage.php","hash":"3cb7d130f4f9966ea79d70480665d7e2669a3af7","parent":"CharlotteDunois\\Yasmin\\Utils\\Collection","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface":"CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface"},"traits":[],"source":null,"properties":[],"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\TextChannel":{"name":"CharlotteDunois\\Yasmin\\Models\\TextChannel","line":33,"short_desc":"Represents a guild's text channel.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The channel ID."],[[["string",false]],"type","The channel type. ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})"],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","The associated guild."],[[["int",false]],"createdTimestamp","The timestamp of when this channel was created."],[[["string",false]],"name","The channel name."],[[["string",false]],"topic","The channel topic."],[[["bool",false]],"nsfw","Whether the channel is marked as NSFW or not."],[[["string",false],["null",false]],"parentID","The ID of the parent channel, or null."],[[["int",false]],"position","The channel position."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"permissionOverwrites","A collection of PermissionOverwrite instances."],[[["string",false],["null",false]],"lastMessageID","The last message ID, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\MessageStorage",false]],"messages","The storage with all cached messages."],[[["\\DateTime",false]],"createdAt","The DateTime instance of createdTimestamp."],[[["\\CharlotteDunois\\Yasmin\\Models\\Message",false],["null",false]],"lastMessage","The last message, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\CategoryChannel",false],["null",false]],"parent","Returns the channel's parent, or null."],[[["bool",false],["null",false]],"permissionsLocked","If the permissionOverwrites match the parent channel, or null if no parent."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\TextChannel.php","relative_file":"\\src\\Models\\TextChannel.php","hash":"16201ec7ee51c98174ca665b79489ca64dc2da6b","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface","CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface","CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface"},"traits":{"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait":"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait","CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait":"CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait"},"source":null,"properties":{"createdAt":{"name":"createdAt","line":33,"short_desc":"The DateTime instance of createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":33,"short_desc":"The timestamp of when this channel was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":33,"short_desc":"The associated guild.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":33,"short_desc":"The channel ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"lastMessage":{"name":"lastMessage","line":33,"short_desc":"The last message, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"lastMessageID":{"name":"lastMessageID","line":33,"short_desc":"The last message ID, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"messages":{"name":"messages","line":33,"short_desc":"The storage with all cached messages.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\MessageStorage",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":33,"short_desc":"The channel name.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"nsfw":{"name":"nsfw","line":33,"short_desc":"Whether the channel is marked as NSFW or not.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"parent":{"name":"parent","line":33,"short_desc":"Returns the channel's parent, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\CategoryChannel",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"parentID":{"name":"parentID","line":33,"short_desc":"The ID of the parent channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissionOverwrites":{"name":"permissionOverwrites","line":33,"short_desc":"A collection of PermissionOverwrite instances.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissionsLocked":{"name":"permissionsLocked","line":33,"short_desc":"If the permissionOverwrites match the parent channel, or null if no parent.","long_desc":null,"hint":[["bool",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"position":{"name":"position","line":33,"short_desc":"The channel position.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"topic":{"name":"topic","line":33,"short_desc":"The channel topic.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":33,"short_desc":"The channel type. ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":172,"short_desc":"Automatically converts to a mention.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"createWebhook":{"name":"createWebhook","line":130,"short_desc":"Create a webhook for the channel. Resolves with the new Webhook instance.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Webhook"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":130,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"avatar":{"name":"avatar","line":130,"short_desc":"An URL or file path, or data.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":130,"endLine":130}},"default":"null","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":130,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"fetchWebhooks":{"name":"fetchWebhooks","line":154,"short_desc":"Fetches the channel's webhooks. Resolves with a Collection of Webhook instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Webhook"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\User":{"name":"CharlotteDunois\\Yasmin\\Models\\User","line":33,"short_desc":"Represents an user on Discord.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The user ID."],[[["string",false]],"username","The username."],[[["string",false]],"discriminator","The discriminator of this user."],[[["boolean",false]],"bot","Is the user a bot? Or are you a bot?"],[[["string",false]],"avatar","The hash of the user's avatar."],[[["string",false]],"email","An email address or maybe nothing at all. More likely to be nothing at all."],[[["boolean",false],["null",false]],"mfaEnabled","Whether the user has two factor enabled on their account, or null if no information provided."],[[["boolean",false],["null",false]],"verified","Whether the email on this account has been verified, or null if no information provided."],[[["boolean",false]],"webhook","Determines wether the user is a webhook or not."],[[["int",false]],"createdTimestamp","The timestamp of when this user was created."],[[["\\DateTime",false]],"createdAt","An DateTime instance of the createdTimestamp."],[[["int",false]],"defaultAvatar","The identifier of the default avatar for this user."],[[["\\CharlotteDunois\\Yasmin\\Models\\DMChannel",false],["null",false]],"dmChannel","The DM channel for this user, if it exists, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\Message",false],["null",false]],"lastMessage","The laste message the user sent while the client was online, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false],["null",false]],"presence","The presence for this user, or null."],[[["string",false]],"tag","Username#Discriminator."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\User.php","relative_file":"\\src\\Models\\User.php","hash":"edee79a5a44f9b3163c99543fe2db9db6e09883a","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"avatar":{"name":"avatar","line":33,"short_desc":"The hash of the user's avatar.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"bot":{"name":"bot","line":33,"short_desc":"Is the user a bot? Or are you a bot?","long_desc":null,"hint":[["boolean",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdAt":{"name":"createdAt","line":33,"short_desc":"An DateTime instance of the createdTimestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":33,"short_desc":"The timestamp of when this user was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"defaultAvatar":{"name":"defaultAvatar","line":33,"short_desc":"The identifier of the default avatar for this user.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"discriminator":{"name":"discriminator","line":33,"short_desc":"The discriminator of this user.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"dmChannel":{"name":"dmChannel","line":33,"short_desc":"The DM channel for this user, if it exists, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\DMChannel",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"email":{"name":"email","line":33,"short_desc":"An email address or maybe nothing at all. More likely to be nothing at all.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":33,"short_desc":"The user ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"lastMessage":{"name":"lastMessage","line":33,"short_desc":"The laste message the user sent while the client was online, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Message",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"lastMessageID":{"name":"lastMessageID","line":50,"short_desc":"The last ID of the message the user sent while the client was online, or null.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"default":null,"errors":[],"source":null},"mfaEnabled":{"name":"mfaEnabled","line":33,"short_desc":"Whether the user has two factor enabled on their account, or null if no information provided.","long_desc":null,"hint":[["boolean",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"presence":{"name":"presence","line":33,"short_desc":"The presence for this user, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Presence",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"tag":{"name":"tag","line":33,"short_desc":"Username#Discriminator.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"username":{"name":"username","line":33,"short_desc":"The username.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"verified":{"name":"verified","line":33,"short_desc":"Whether the email on this account has been verified, or null if no information provided.","long_desc":null,"hint":[["boolean",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"webhook":{"name":"webhook","line":33,"short_desc":"Determines wether the user is a webhook or not.","long_desc":null,"hint":[["boolean",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__toString":{"name":"__toString","line":221,"short_desc":"Automatically converts the User instance to a mention.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"createDM":{"name":"createDM","line":133,"short_desc":"Opens a DM channel to this user. Resolves with an instance of DMChannel.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\DMChannel"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"deleteDM":{"name":"deleteDM","line":151,"short_desc":"Deletes an existing DM channel to this user.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fetchUserConnections":{"name":"fetchUserConnections","line":204,"short_desc":"Fetches the User's connections. Requires connections scope. Resolves with a Collection of UserConnection instances, mapped by their ID.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\UserConnection"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getAvatarURL":{"name":"getAvatarURL","line":177,"short_desc":"Get the Avatar URL.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"size":{"name":"size","line":177,"short_desc":"Any powers of 2.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"256","variadic":false,"is_by_ref":false},"format":{"name":"format","line":177,"short_desc":"One of png, webp, jpg or gif (empty = default format).","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":"''","variadic":false,"is_by_ref":false}}},"getDefaultAvatarURL":{"name":"getDefaultAvatarURL","line":167,"short_desc":"Get the default Avatar URL.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"size":{"name":"size","line":167,"short_desc":"Any powers of 2.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"256","variadic":false,"is_by_ref":false}}},"getDisplayAvatarURL":{"name":"getDisplayAvatarURL","line":195,"short_desc":"Get the URL of the displayed avatar.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"size":{"name":"size","line":195,"short_desc":"Any powers of 2.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"256","variadic":false,"is_by_ref":false},"format":{"name":"format","line":195,"short_desc":"One of png, webp, jpg or gif (empty = default format).","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":null,"default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\UserConnection":{"name":"CharlotteDunois\\Yasmin\\Models\\UserConnection","line":20,"short_desc":"Represents an user connection.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The ID of the connection account."],[[["string",false]],"name","The username of the connection account."],[[["string",false]],"type","The type of the user connection (e.g. twitch, youtube)."],[[["bool",false]],"revoked","Whether the connection is revoked."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\UserConnection.php","relative_file":"\\src\\Models\\UserConnection.php","hash":"5204d5ea4925056d4aa32e69baed1ee428087c3c","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"id":{"name":"id","line":20,"short_desc":"The ID of the connection account.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":20,"short_desc":"The username of the connection account.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"revoked":{"name":"revoked","line":20,"short_desc":"Whether the connection is revoked.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":20,"short_desc":"The type of the user connection (e.g. twitch, youtube).","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\UserStorage":{"name":"CharlotteDunois\\Yasmin\\Models\\UserStorage","line":15,"short_desc":"User Storage to store and cache users, which utlizies Collection.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\UserStorage.php","relative_file":"\\src\\Models\\UserStorage.php","hash":"d27e98e6b0bbcba1a8a795a36d679410d9478134","parent":"CharlotteDunois\\Yasmin\\Models\\Storage","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"delete":{"name":"delete","line":72,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":72,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"resolve":{"name":"resolve","line":22,"short_desc":"Resolves given data to an user.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":22,"short_desc":"string = user ID","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"set":{"name":"set","line":60,"short_desc":"","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":null,"tags":{"inheritDoc":[[""]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":60,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":60,"short_desc":null,"long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\VoiceChannel":{"name":"CharlotteDunois\\Yasmin\\Models\\VoiceChannel","line":32,"short_desc":"Represents a guild's voice channel.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The ID of the channel."],[[["string",false]],"type","The type of the channel. ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})"],[[["int",false]],"createdTimestamp","When this channel was created."],[[["string",false]],"name","The name of the channel."],[[["int",false]],"bitrate","The bitrate of the channel."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"members","Holds all members which currently are in the voice channel. ({@see \\CharlotteDunois\\Yasmin\\Models\\GuildMember})"],[[["string",false],["null",false]],"parentID","The ID of the parent channel, or null."],[[["int",false]],"position","The position of the channel."],[[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"permissionOverwrites","A collection of PermissionOverwrite instances."],[[["int",false]],"userLimit","The maximum amount of users allowed in the channel - 0 means unlimited."],[[["bool",false]],"full","Checks if the voice channel is full."],[[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"guild","The guild the channel is in."],[[["\\CharlotteDunois\\Yasmin\\Models\\CategoryChannel",false],["null",false]],"parent","Returns the channel's parent, or null."],[[["bool",false],["null",false]],"permissionsLocked","If the permissionOverwrites match the parent channel, or null if no parent."],[[["bool",false]],"speakable","Whether the client has permission to send audio to the channel."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\VoiceChannel.php","relative_file":"\\src\\Models\\VoiceChannel.php","hash":"8a16cbc0e7ebd67e86e95bb98ce67caebbd823dd","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface","CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface","CharlotteDunois\\Yasmin\\Interfaces\\VoiceChannelInterface":"CharlotteDunois\\Yasmin\\Interfaces\\VoiceChannelInterface"},"traits":{"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait":"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait"},"source":null,"properties":{"bitrate":{"name":"bitrate","line":32,"short_desc":"The bitrate of the channel.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"createdTimestamp":{"name":"createdTimestamp","line":32,"short_desc":"When this channel was created.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"full":{"name":"full","line":32,"short_desc":"Checks if the voice channel is full.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guild":{"name":"guild","line":32,"short_desc":"The guild the channel is in.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Guild",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":32,"short_desc":"The ID of the channel.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"members":{"name":"members","line":32,"short_desc":"Holds all members which currently are in the voice channel. ({@see \\CharlotteDunois\\Yasmin\\Models\\GuildMember})","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":32,"short_desc":"The name of the channel.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"parent":{"name":"parent","line":32,"short_desc":"Returns the channel's parent, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\CategoryChannel",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"parentID":{"name":"parentID","line":32,"short_desc":"The ID of the parent channel, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissionOverwrites":{"name":"permissionOverwrites","line":32,"short_desc":"A collection of PermissionOverwrite instances.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"permissionsLocked":{"name":"permissionsLocked","line":32,"short_desc":"If the permissionOverwrites match the parent channel, or null if no parent.","long_desc":null,"hint":[["bool",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"position":{"name":"position","line":32,"short_desc":"The position of the channel.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"speakable":{"name":"speakable","line":32,"short_desc":"Whether the client has permission to send audio to the channel.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"type":{"name":"type","line":32,"short_desc":"The type of the channel. ({@see \\CharlotteDunois\\Yasmin\\Constants::CHANNEL_TYPES})","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"userLimit":{"name":"userLimit","line":32,"short_desc":"The maximum amount of users allowed in the channel - 0 means unlimited.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"setBitrate":{"name":"setBitrate","line":118,"short_desc":"Sets the bitrate of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"bitrate":{"name":"bitrate","line":118,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":118,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setUserLimit":{"name":"setUserLimit","line":129,"short_desc":"Sets the user limit of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"userLimit":{"name":"userLimit","line":129,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":129,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Models\\VoiceRegion":{"name":"CharlotteDunois\\Yasmin\\Models\\VoiceRegion","line":22,"short_desc":"Represents a voice region.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The ID of the region."],[[["string",false]],"name","The name of the region."],[[["bool",false]],"vip","Whether this is a VIP voice region."],[[["bool",false]],"optimal","Whether this is an optimal voice region for the client user."],[[["bool",false]],"deprecated","Whether this voice region is deprecated and therefore should be avoided."],[[["bool",false]],"custom","Whether the region is custom."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\VoiceRegion.php","relative_file":"\\src\\Models\\VoiceRegion.php","hash":"adadb4a5102a76d7e8994232b986c196c3b0939f","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"custom":{"name":"custom","line":22,"short_desc":"Whether the region is custom.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"deprecated":{"name":"deprecated","line":22,"short_desc":"Whether this voice region is deprecated and therefore should be avoided.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":22,"short_desc":"The ID of the region.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":22,"short_desc":"The name of the region.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"optimal":{"name":"optimal","line":22,"short_desc":"Whether this is an optimal voice region for the client user.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"vip":{"name":"vip","line":22,"short_desc":"Whether this is a VIP voice region.","long_desc":null,"hint":[["bool",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":[],"constants":[]},"CharlotteDunois\\Yasmin\\Models\\Webhook":{"name":"CharlotteDunois\\Yasmin\\Models\\Webhook","line":23,"short_desc":"Represents a webhook.","long_desc":"","hint":null,"tags":{"property":[[[["string",false]],"id","The webhook ID."],[[["string",false],["null",false]],"name","The webhook default name, or null."],[[["string",false],["null",false]],"avatar","The webhook default avatar, or null."],[[["string",false],["null",false]],"channelID","The channel the webhook belongs to."],[[["string",false],["null",false]],"guildID","The guild the webhook belongs to, or null."],[[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"owner","The owner of the webhook, or null."],[[["string",false]],"token","The webhook token."]]},"namespace":"CharlotteDunois\\Yasmin\\Models","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Models\\Webhook.php","relative_file":"\\src\\Models\\Webhook.php","hash":"87aaf69c8edba6c69c3a99098cc9d3a8544d64b5","parent":"CharlotteDunois\\Yasmin\\Models\\ClientBase","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"avatar":{"name":"avatar","line":23,"short_desc":"The webhook default avatar, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"channelID":{"name":"channelID","line":23,"short_desc":"The channel the webhook belongs to.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"guildID":{"name":"guildID","line":23,"short_desc":"The guild the webhook belongs to, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"id":{"name":"id","line":23,"short_desc":"The webhook ID.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"name":{"name":"name","line":23,"short_desc":"The webhook default name, or null.","long_desc":null,"hint":[["string",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"owner":{"name":"owner","line":23,"short_desc":"The owner of the webhook, or null.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false],["null",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"token":{"name":"token","line":23,"short_desc":"The webhook token.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"delete":{"name":"delete","line":111,"short_desc":"Deletes the webhook.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":111,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":73,"short_desc":"Edits the webhook. Resolves with $this.","long_desc":"Options are as following (at least one is required):\n\n<pre>\narray(\n   'name' => string,\n   'avatar' => string, (data, filepath or URL)\n   'channel' => \\CharlotteDunois\\Yasmin\\Models\\TextChannel|string\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":73,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":73,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"send":{"name":"send","line":158,"short_desc":"Executes the webhooks and sends a message to the channel. Resolves with an instance of Message, or a Collection of Message instances, mapped by their ID. Or when using the WebhookClient, it will resolve with a raw Message object (array) or an array of raw Message objects (array).","long_desc":"Options are as following (all are optional):\n\n<pre>\narray(\n   'embeds' => \\CharlotteDunois\\Yasmin\\Models\\MessageEmbed[]|array[], (an array of (embed) array\/object or MessageEmbed instances)\n   'files' => array, (an array of array('name' => string, 'data' => string || 'path' => string) or just plain file contents, file paths or URLs)\n   'nonce' => string, (a snowflake used for optimistic sending)\n   'disableEveryone' => bool, (whether @everyone and @here should be replaced with plaintext, defaults to client option disableEveryone (which itself defaults to false))\n   'tts' => bool,\n   'split' => bool|array, (*)\n   'username' => string,\n   'avatar' => string, (an URL)\n)\n\n  * array(\n  *   'before' => string, (The string to insert before the split)\n  *   'after' => string, (The string to insert after the split)\n  *   'char' => string, (The string to split on)\n  *   'maxLength' => int, (The max. length of each message)\n  * )\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"],["https:\/\/discordapp.com\/developers\/docs\/resources\/channel#message-object"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"content":{"name":"content","line":158,"short_desc":"The webhook message content.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":158,"short_desc":"Any webhook message options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait":{"name":"CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait","line":15,"short_desc":"The trait all guild channels use.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Traits","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Traits\\GuildChannelTrait.php","relative_file":"\\src\\Traits\\GuildChannelTrait.php","hash":"7fbff2d6e69ac115eee0b775100e1e07413dfe1d","parent":null,"modifiers":null,"is_trait":true,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"clone":{"name":"clone","line":62,"short_desc":"Clones a guild channel. Resolves with an instance of GuildChannelInterface.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":62,"short_desc":"Optional name for the new channel, otherwise it has the name of this channel.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"null","variadic":false,"is_by_ref":false},"withPermissions":{"name":"withPermissions","line":62,"short_desc":"Whether to clone the channel with this channel's permission overwrites","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false},"withTopic":{"name":"withTopic","line":62,"short_desc":"Whether to clone the channel with this channel's topic.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":62,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"createInvite":{"name":"createInvite","line":34,"short_desc":"Creates an invite. Resolves with an instance of Invite.","long_desc":"Options are as following (all are optional).\n\n<pre>\narray(\n   'maxAge' => int,\n   'maxUses' => int, (0 = unlimited)\n   'temporary' => bool,\n   'unique' => bool\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Invite"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":34,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"delete":{"name":"delete","line":174,"short_desc":"Deletes the channel.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":174,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"edit":{"name":"edit","line":118,"short_desc":"Edits the channel. Resolves with $this.","long_desc":"Options are as following (at least one is required).\n\n<pre>\narray(\n   'name' => string,\n   'position' => int,\n   'topic' => string, (text channels only)\n   'nsfw' => bool, (text channels only)\n   'bitrate' => int, (voice channels only)\n   'userLimit' => int, (voice channels only)\n   'parent' => \\CharlotteDunois\\Yasmin\\Models\\CategoryChannel|string, (string = channel ID)\n   'permissionOverwrites' => \\CharlotteDunois\\Yasmin\\Utils\\Collection|array (an array or Collection of PermissionOverwrite instances or permission overwrite arrays)\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":118,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":118,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"fetchInvites":{"name":"fetchInvites","line":187,"short_desc":"Fetches all invites of this channel. Resolves with a Collection of Invite instances, mapped by their code.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Invite"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"lockPermissions":{"name":"lockPermissions","line":346,"short_desc":"Locks in the permission overwrites from the parent channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\BadMethodCallException",""]],"errors":[],"example":null,"source":null,"parameters":{"reason":{"name":"reason","line":346,"short_desc":"The reason for this.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"overwritePermissions":{"name":"overwritePermissions","line":285,"short_desc":"Overwrites the permissions for a member or role in this channel. Resolves with an instance of PermissionOverwrite.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite"]]},"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"memberOrRole":{"name":"memberOrRole","line":285,"short_desc":"The member or role.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["\\CharlotteDunois\\Yasmin\\Models\\Role",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"allow":{"name":"allow","line":285,"short_desc":"Which permissions should be allowed?","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"deny":{"name":"deny","line":285,"short_desc":"Which permissions should be denied?","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false],["int",false]],"tags":[],"modifiers":null,"default":"0","variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":285,"short_desc":"The reason for this.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"overwritesFor":{"name":"overwritesFor","line":251,"short_desc":"Returns the permissions overwrites for the given member.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"member":{"name":"member","line":251,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"permissionsFor":{"name":"permissionsFor","line":208,"short_desc":"Returns the permissions for the given member.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Models\\Permissions",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"member":{"name":"member","line":208,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\GuildMember",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"setNSFW":{"name":"setNSFW","line":398,"short_desc":"Sets the nsfw flag of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"nsfw":{"name":"nsfw","line":398,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":398,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setName":{"name":"setName","line":387,"short_desc":"Sets the name of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":387,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":387,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setParent":{"name":"setParent","line":409,"short_desc":"Sets the parent of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"parent":{"name":"parent","line":409,"short_desc":"An instance of CategoryChannel or the channel ID.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\CategoryChannel",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":409,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPermissionOverwrites":{"name":"setPermissionOverwrites","line":420,"short_desc":"Sets the permission overwrites of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"permissionOverwrites":{"name":"permissionOverwrites","line":420,"short_desc":"An array or Collection of PermissionOverwrite instances or permission overwrite arrays.","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false],["array",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":420,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setPosition":{"name":"setPosition","line":431,"short_desc":"Sets the position of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"position":{"name":"position","line":431,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":431,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}},"setTopic":{"name":"setTopic","line":474,"short_desc":"Sets the topic of the channel. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"topic":{"name":"topic","line":474,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":474,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait":{"name":"CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait","line":15,"short_desc":"The text based channel trait.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Traits","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Traits\\TextChannelTrait.php","relative_file":"\\src\\Traits\\TextChannelTrait.php","hash":"7c56f6dfb6cf83ec13b216a1333e9de204e81c18","parent":null,"modifiers":null,"is_trait":true,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"bulkDelete":{"name":"bulkDelete","line":28,"short_desc":"Deletes multiple messages at once. Resolves with $this.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"messages":{"name":"messages","line":28,"short_desc":"A collection or array of Message instances, or the number of messages to delete (2-100).","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false],["array",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"reason":{"name":"reason","line":28,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"''","variadic":false,"is_by_ref":false},"filterOldMessages":{"name":"filterOldMessages","line":28,"short_desc":"Automatically filters out too old messages (14 days).","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"collectMessages":{"name":"collectMessages","line":80,"short_desc":"Collects messages during a specific duration (and max. amount). Resolves with a Collection of Message instances, mapped by their IDs.","long_desc":"Options are as following (all are optional):\n\n<pre>\narray(\n  'max' => int, (max. messages to collect)\n  'time' => int, (duration, in seconds, default 30)\n  'errors' => array, (optional, which failed \"conditions\" (max not reached in time (\"time\")) lead to a rejected promise, defaults to [])\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"filter":{"name":"filter","line":80,"short_desc":"The filter to only collect desired messages.","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":80,"short_desc":"The collector options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"fetchMessage":{"name":"fetchMessage","line":120,"short_desc":"Fetches a specific message using the ID. Resolves with an instance of Message.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"id":{"name":"id","line":120,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"fetchMessages":{"name":"fetchMessages","line":147,"short_desc":"Fetches messages of this channel. Resolves with a Collection of Message instances, mapped by their ID.","long_desc":"Options are as following:\n\n<pre>\narray(\n  'after' => string, (message ID)\n  'around' => string, (message ID)\n  'before' => string, (message ID)\n  'limit' => int, (1-100, defaults to 50)\n)\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":147,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"isTyping":{"name":"isTyping","line":325,"short_desc":"Determines whether the given user is typing in this channel or not.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":325,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":325,"endLine":325}},"default":null,"variadic":false,"is_by_ref":false}}},"isTypingSince":{"name":"isTypingSince","line":334,"short_desc":"Determines whether how long the given user has been typing in this channel. Returns -1 if the user is not typing.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"user":{"name":"user","line":334,"short_desc":"","long_desc":null,"hint":[["\\CharlotteDunois\\Yasmin\\Models\\User",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["CharlotteDunois","Yasmin","Models","User"],"attributes":{"startLine":334,"endLine":334}},"default":null,"variadic":false,"is_by_ref":false}}},"send":{"name":"send","line":190,"short_desc":"Sends a message to a channel. Resolves with an instance of Message, or a Collection of Message instances, mapped by their ID.","long_desc":"Options are as following (all are optional):\n\n<pre>\narray(\n   'embed' => array|\\CharlotteDunois\\Yasmin\\Models\\MessageEmbed, (an (embed) array\/object or an instance of MessageEmbed)\n   'files' => array, (an array of array('name' => string, 'data' => string || 'path' => string) or just plain file contents, file paths or URLs)\n   'nonce' => string, (a snowflake used for optimistic sending)\n   'disableEveryone' => bool, (whether @everyone and @here should be replaced with plaintext, defaults to client option disableEveryone (which itself defaults to false))\n   'tts' => bool,\n   'split' => bool|array, (*)\n)\n\n  * array(\n  *   'before' => string, (The string to insert before the split)\n  *   'after' => string, (The string to insert after the split)\n  *   'char' => string, (The string to split on)\n  *   'maxLength' => int, (The max. length of each message)\n  * )\n<\/pre>","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\CharlotteDunois\\Yasmin\\Models\\Message"]]},"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"content":{"name":"content","line":190,"short_desc":"The message content.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":190,"short_desc":"Any message options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"startTyping":{"name":"startTyping","line":267,"short_desc":"Starts sending the typing indicator in this channel. Counts up a triggered typing counter.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"stopTyping":{"name":"stopTyping","line":294,"short_desc":"Stops sending the typing indicator in this channel. Counts down a triggered typing counter.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"force":{"name":"force","line":294,"short_desc":"Reset typing counter and stop sending the indicator.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"typingCount":{"name":"typingCount","line":316,"short_desc":"Returns the amount of user typing in this channel.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\Utils\\Collection":{"name":"CharlotteDunois\\Yasmin\\Utils\\Collection","line":15,"short_desc":"Collection, an util to conventionally store a key-value pair.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Utils","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Utils\\Collection.php","relative_file":"\\src\\Utils\\Collection.php","hash":"65b1c139152f52929a66227781688c49f47b40b6","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Countable":"Countable","Iterator":"Iterator"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"I think you are supposed to know what this does.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":25,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"array","attributes":{"startLine":25,"endLine":25}},"default":"null","variadic":false,"is_by_ref":false}}},"all":{"name":"all","line":117,"short_desc":"Returns all items.","long_desc":"","hint":[["mixed",true]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"avg":{"name":"avg","line":126,"short_desc":"Gets the average of all items.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":126,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"callable","attributes":{"startLine":126,"endLine":126}},"default":"null","variadic":false,"is_by_ref":false}}},"chunk":{"name":"chunk","line":141,"short_desc":"Breaks the collection into multiple, smaller collections of a given size. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"numitems":{"name":"numitems","line":141,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"preserve_keys":{"name":"preserve_keys","line":141,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"clear":{"name":"clear","line":108,"short_desc":"Clears the Collection.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"collapse":{"name":"collapse","line":149,"short_desc":"Collapses a collection of arrays into a flat collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"combine":{"name":"combine","line":170,"short_desc":"Combines the keys of the collection with the values of another array or collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"values":{"name":"values","line":170,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"contains":{"name":"contains","line":180,"short_desc":"Determines whether the collection contains a given item.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"item":{"name":"item","line":180,"short_desc":"","long_desc":null,"hint":[["callable",false],["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":180,"short_desc":"","long_desc":null,"hint":[["mixed",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"copy":{"name":"copy","line":213,"short_desc":"Returns a copy of itself.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"count":{"name":"count","line":205,"short_desc":"Returns the total number of items in the collection.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"delete":{"name":"delete","line":98,"short_desc":"Removes an item from the collection by its key.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":98,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"diff":{"name":"diff","line":222,"short_desc":"Compares the collection against another collection or a plain PHP array based on its value. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"arr":{"name":"arr","line":222,"short_desc":"","long_desc":null,"hint":[["mixed",true],["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"diffKeys":{"name":"diffKeys","line":235,"short_desc":"Compares the collection against another collection or a plain PHP array based on its key. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"arr":{"name":"arr","line":235,"short_desc":"","long_desc":null,"hint":[["mixed",true],["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"each":{"name":"each","line":248,"short_desc":"Iterates over the items in the collection and passes each item to a given callback.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":248,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"every":{"name":"every","line":265,"short_desc":"Creates a new collection consisting of every n-th element.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"nth":{"name":"nth","line":265,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"offset":{"name":"offset","line":265,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false}}},"except":{"name":"except","line":281,"short_desc":"Returns all items in the collection except for those with the specified keys. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"keys":{"name":"keys","line":281,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"filter":{"name":"filter","line":297,"short_desc":"Filters the collection by a given callback, keeping only those items that pass a given truth test. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":297,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"first":{"name":"first","line":314,"short_desc":"Returns the first element in the collection that passes a given truth test.","long_desc":"","hint":[["mixed",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":314,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"callable","attributes":{"startLine":314,"endLine":314}},"default":"null","variadic":false,"is_by_ref":false}}},"flatten":{"name":"flatten","line":334,"short_desc":"Flattens a multi-dimensional collection into a single dimension. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"depth":{"name":"depth","line":334,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"0","variadic":false,"is_by_ref":false}}},"flip":{"name":"flip","line":343,"short_desc":"Swaps the collection's keys with their corresponding values. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"get":{"name":"get","line":353,"short_desc":"Returns the item at a given key. If the key does not exist, null is returned.","long_desc":"","hint":[["mixed",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":353,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"groupBy":{"name":"groupBy","line":366,"short_desc":"Groups the collection's items by a given key. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":366,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"has":{"name":"has","line":390,"short_desc":"Determines if a given key exists in the collection.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":390,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"implode":{"name":"implode","line":400,"short_desc":"Joins the items in a collection. Its arguments depend on the type of items in the collection. If the collection contains arrays or objects, you should pass the key of the attributes you wish to join, and the \"glue\" string you wish to place between the values.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"col":{"name":"col","line":400,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"glue":{"name":"glue","line":400,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":"', '","variadic":false,"is_by_ref":false}}},"indexOf":{"name":"indexOf","line":420,"short_desc":"Returns the position of the given value in the collection. Returns null if the given value couldn't be found.","long_desc":"","hint":[["int",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"value":{"name":"value","line":420,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"intersect":{"name":"intersect","line":438,"short_desc":"Removes any values that are not present in the given array or collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"arr":{"name":"arr","line":438,"short_desc":"","long_desc":null,"hint":[["mixed",true],["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"keyBy":{"name":"keyBy","line":451,"short_desc":"Keys the collection by the given key.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"col":{"name":"col","line":451,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"keys":{"name":"keys","line":478,"short_desc":"Returns all of the collection's keys. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"last":{"name":"last","line":487,"short_desc":"Returns the last element in the collection that passes a given truth test.","long_desc":"","hint":[["mixed",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":487,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"callable","attributes":{"startLine":487,"endLine":487}},"default":"null","variadic":false,"is_by_ref":false}}},"map":{"name":"map","line":508,"short_desc":"Iterates through the collection and passes each value to the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":508,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"callable","attributes":{"startLine":508,"endLine":508}},"default":null,"variadic":false,"is_by_ref":false}}},"max":{"name":"max","line":519,"short_desc":"Return the maximum value of a given key.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":519,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"''","variadic":false,"is_by_ref":false}}},"merge":{"name":"merge","line":534,"short_desc":"Merges the given array into the collection. Any string key in the array matching a string key in the collection will overwrite the value in the collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"arr":{"name":"arr","line":534,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"min":{"name":"min","line":543,"short_desc":"Return the minimum value of a given key.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":543,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"''","variadic":false,"is_by_ref":false}}},"only":{"name":"only","line":558,"short_desc":"Returns the items in the collection with the specified keys. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"keys":{"name":"keys","line":558,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"pluck":{"name":"pluck","line":575,"short_desc":"Return the values from a single column in the input array. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":575,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"index":{"name":"index","line":575,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"pop":{"name":"pop","line":596,"short_desc":"Removes and returns the last item from the collection.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"pull":{"name":"pull","line":605,"short_desc":"Removes and returns an item from the collection by its key.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":605,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"random":{"name":"random","line":618,"short_desc":"Returns one random item, or multiple random items inside a Collection, from the Collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"num":{"name":"num","line":618,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"1","variadic":false,"is_by_ref":false}}},"reduce":{"name":"reduce","line":638,"short_desc":"Reduces the collection to a single value, passing the result of each iteration into the subsequent iteration.","long_desc":"","hint":[["mixed",false],["null",false],["void",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":638,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false},"carry":{"name":"carry","line":638,"short_desc":"","long_desc":null,"hint":[["mixed",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"reverse":{"name":"reverse","line":651,"short_desc":"Reverses the order of the collection's items. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"preserve_keys":{"name":"preserve_keys","line":651,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"search":{"name":"search","line":661,"short_desc":"Searches the collection for the given value and returns its key if found. If the item is not found, false is returned.","long_desc":"","hint":[["mixed",false],["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"needle":{"name":"needle","line":661,"short_desc":"","long_desc":null,"hint":[["callable",false],["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"strict":{"name":"strict","line":661,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"set":{"name":"set","line":88,"short_desc":"Sets a key-value pair.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":88,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":88,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"shift":{"name":"shift","line":680,"short_desc":"Removes and returns the first item from the collection.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"shuffle":{"name":"shuffle","line":688,"short_desc":"Randomly shuffles the items in the collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"slice":{"name":"slice","line":702,"short_desc":"Returns a slice of the collection starting at the given index. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"offset":{"name":"offset","line":702,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"limit":{"name":"limit","line":702,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":702,"endLine":702}},"default":"null","variadic":false,"is_by_ref":false},"preserve_keys":{"name":"preserve_keys","line":702,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"sort":{"name":"sort","line":713,"short_desc":"Sorts the collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":713,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"callable","attributes":{"startLine":713,"endLine":713}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":713,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"SORT_REGULAR","variadic":false,"is_by_ref":false}}},"sortBy":{"name":"sortBy","line":732,"short_desc":"Sorts the collection by the given key. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"sortkey":{"name":"sortkey","line":732,"short_desc":"","long_desc":null,"hint":[["mixed",false],["\\Closure",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":732,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"SORT_REGULAR","variadic":false,"is_by_ref":false},"descending":{"name":"descending","line":732,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"sortByDesc":{"name":"sortByDesc","line":760,"short_desc":"Sorts the collection by the given key in descending order. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"sortkey":{"name":"sortkey","line":760,"short_desc":"","long_desc":null,"hint":[["mixed",false],["\\Closure",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":760,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":null,"default":"SORT_REGULAR","variadic":false,"is_by_ref":false}}},"splice":{"name":"splice","line":771,"short_desc":"Removes and returns a slice of items starting at the specified index. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"offset":{"name":"offset","line":771,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"length":{"name":"length","line":771,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"null","variadic":false,"is_by_ref":false},"replacement":{"name":"replacement","line":771,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"sum":{"name":"sum","line":781,"short_desc":"Returns the sum of all items in the collection.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"closure":{"name":"closure","line":781,"short_desc":"","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"callable","attributes":{"startLine":781,"endLine":781}},"default":"null","variadic":false,"is_by_ref":false}}},"take":{"name":"take","line":798,"short_desc":"Returns a new collection with the specified number of items.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"limit":{"name":"limit","line":798,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"unique":{"name":"unique","line":811,"short_desc":"Returns all of the unique items in the collection. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":811,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"values":{"name":"values","line":834,"short_desc":"Returns a new collection with the keys reset to consecutive integers.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"where":{"name":"where","line":845,"short_desc":"Filters the collection by a given key \/ value pair. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":845,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":845,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"strict":{"name":"strict","line":845,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"whereIn":{"name":"whereIn","line":869,"short_desc":"Filters the collection by a given key \/ value pair array. Returns a new Collection.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"arr":{"name":"arr","line":869,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"strict":{"name":"strict","line":869,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"zip":{"name":"zip","line":894,"short_desc":"Merges together the values of the given array with the values of the collection at the corresponding index. Returns a new Collection.","long_desc":"","hint":[["CharlotteDunois\\Yasmin\\Utils\\$this",false],["\\CharlotteDunois\\Yasmin\\Utils\\Collection",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"arr":{"name":"arr","line":894,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Yasmin\\Utils\\DataHelpers":{"name":"CharlotteDunois\\Yasmin\\Utils\\DataHelpers","line":15,"short_desc":"Data Helper methods.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Utils","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Utils\\DataHelpers.php","relative_file":"\\src\\Utils\\DataHelpers.php","hash":"258d4314bebf065d81a9ca87988f916a277ae0f7","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"escapeMarkdown":{"name":"escapeMarkdown","line":96,"short_desc":"Escapes any Discord-flavour markdown in a string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"text":{"name":"text","line":96,"short_desc":"Content to escape.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"onlyCodeBlock":{"name":"onlyCodeBlock","line":96,"short_desc":"Whether to only escape codeblocks (takes priority).","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false},"onlyInlineCode":{"name":"onlyInlineCode","line":96,"short_desc":"Whether to only escape inline code.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"makeBase64URI":{"name":"makeBase64URI","line":62,"short_desc":"Turns input into a base64-encoded data URI.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\BadMethodCallException",""]],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":62,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"makeDateTime":{"name":"makeDateTime","line":51,"short_desc":"Makes a DateTime instance from an UNIX timestamp and applies the default timezone.","long_desc":"","hint":[["\\DateTime",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"timestamp":{"name":"timestamp","line":51,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"resolveColor":{"name":"resolveColor","line":28,"short_desc":"Resolves a color to an integer.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"color":{"name":"color","line":28,"short_desc":"","long_desc":null,"hint":[["array",false],["int",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"resolveFileResolvable":{"name":"resolveFileResolvable","line":76,"short_desc":"Resolves filepath and URL into file data - returns it if it's neither. Resolves with a string.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"file":{"name":"file","line":76,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"resolveMessageOptionsFiles":{"name":"resolveMessageOptionsFiles","line":146,"short_desc":"Resolves files of Message Options.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"options":{"name":"options","line":146,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"splitMessage":{"name":"splitMessage","line":114,"short_desc":"Splits a string into multiple chunks at a designated character that do not exceed a specific length.","long_desc":"","hint":[["string",true]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"text":{"name":"text","line":114,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":114,"short_desc":"Options controlling the behaviour of the split.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}}},"constants":{"DEFAULT_MESSAGE_SPLIT_OPTIONS":{"name":"DEFAULT_MESSAGE_SPLIT_OPTIONS","line":20,"short_desc":"Default Message Split Options.","long_desc":"","source":["const DEFAULT_MESSAGE_SPLIT_OPTIONS = array('before' => '', 'after' => '', 'char' => \"\\n\", 'maxLength' => 1950);",""]}}},"CharlotteDunois\\Yasmin\\Utils\\Snowflake":{"name":"CharlotteDunois\\Yasmin\\Utils\\Snowflake","line":21,"short_desc":"Represents a Snowflake.","long_desc":"","hint":null,"tags":{"property":[[[["float",false]],"timestamp","The timestamp of when this snowflake got generated. In seconds with microseconds."],[[["int",false]],"workerID","The ID of the worker which generated this snowflake."],[[["int",false]],"processID","The ID of the process which generated this snowflake."],[[["int",false]],"increment","The increment index of the snowflake."],[[["string",false]],"binary","The binary representation of this snowflake."],[[["\\DateTime",false]],"date","A DateTime instance of the timestamp."]]},"namespace":"CharlotteDunois\\Yasmin\\Utils","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Utils\\Snowflake.php","relative_file":"\\src\\Utils\\Snowflake.php","hash":"86384d0e0942c345e2171e082a54ad56bac14225","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":{"binary":{"name":"binary","line":21,"short_desc":"The binary representation of this snowflake.","long_desc":null,"hint":[["string",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"date":{"name":"date","line":21,"short_desc":"A DateTime instance of the timestamp.","long_desc":null,"hint":[["\\DateTime",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"increment":{"name":"increment","line":21,"short_desc":"The increment index of the snowflake.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"processID":{"name":"processID","line":21,"short_desc":"The ID of the process which generated this snowflake.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"timestamp":{"name":"timestamp","line":21,"short_desc":"The timestamp of when this snowflake got generated. In seconds with microseconds.","long_desc":null,"hint":[["float",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null},"workerID":{"name":"workerID","line":21,"short_desc":"The ID of the worker which generated this snowflake.","long_desc":null,"hint":[["int",false]],"hint_desc":null,"tags":[],"modifiers":null,"default":null,"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":40,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"snowflake":{"name":"snowflake","line":40,"short_desc":"","long_desc":null,"hint":[["string",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"deconstruct":{"name":"deconstruct","line":89,"short_desc":"Deconstruct a snowflake.","long_desc":"","hint":[["\\CharlotteDunois\\Yasmin\\Utils\\Snowflake",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"snowflake":{"name":"snowflake","line":89,"short_desc":"","long_desc":null,"hint":[["string",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"generate":{"name":"generate","line":99,"short_desc":"Generates a new snowflake.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"workerID":{"name":"workerID","line":99,"short_desc":"Valid values are in the range of 0-31.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"1","variadic":false,"is_by_ref":false},"processID":{"name":"processID","line":99,"short_desc":"Valid values are in the range of 0-31.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":"0","variadic":false,"is_by_ref":false}}},"isValid":{"name":"isValid","line":131,"short_desc":"This method merely determines whether a given snowflake is considered valid, but not if it exists.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":{"EPOCH":{"name":"EPOCH","line":26,"short_desc":"Time since UNIX epoch to Discord epoch.","long_desc":"","source":null}}},"CharlotteDunois\\Yasmin\\Utils\\URLHelpers":{"name":"CharlotteDunois\\Yasmin\\Utils\\URLHelpers","line":15,"short_desc":"URL Helper methods.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Yasmin\\Utils","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\Utils\\URLHelpers.php","relative_file":"\\src\\Utils\\URLHelpers.php","hash":"adf2b45b8f3e406494e7b4a9ffdc34c6691ef359","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"getHTTPClient":{"name":"getHTTPClient","line":44,"short_desc":"Returns the Guzzle client.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"makeRequest":{"name":"makeRequest","line":87,"short_desc":"Makes an asynchronous request. Resolves with an instance of Response.","long_desc":"","hint":[["\\GuzzleHttp\\Promise\\Promise",false]],"hint_desc":"","tags":{"see":[["\\GuzzleHttp\\Psr7\\Response"]]},"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"request":{"name":"request","line":87,"short_desc":"","long_desc":null,"hint":[["\\GuzzleHttp\\Psr7\\Request",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["GuzzleHttp","Psr7","Request"],"attributes":{"startLine":87,"endLine":87}},"default":null,"variadic":false,"is_by_ref":false},"requestOptions":{"name":"requestOptions","line":87,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"array","attributes":{"startLine":87,"endLine":87}},"default":"null","variadic":false,"is_by_ref":false}}},"makeRequestSync":{"name":"makeRequestSync","line":103,"short_desc":"Makes a synchronous request.","long_desc":"","hint":[["\\GuzzleHttp\\Psr7\\Response",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"request":{"name":"request","line":103,"short_desc":"","long_desc":null,"hint":[["\\GuzzleHttp\\Psr7\\Request",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["GuzzleHttp","Psr7","Request"],"attributes":{"startLine":103,"endLine":103}},"default":null,"variadic":false,"is_by_ref":false},"requestOptions":{"name":"requestOptions","line":103,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"array","attributes":{"startLine":103,"endLine":103}},"default":"null","variadic":false,"is_by_ref":false}}},"resolveURLToData":{"name":"resolveURLToData","line":117,"short_desc":"Asynchronously resolves a given URL to the response body. Resolves with a string.","long_desc":"","hint":[["\\React\\Promise\\Promise",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"url":{"name":"url","line":117,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"requestHeaders":{"name":"requestHeaders","line":117,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"array","attributes":{"startLine":117,"endLine":117}},"default":"null","variadic":false,"is_by_ref":false}}},"stopTimer":{"name":"stopTimer","line":73,"short_desc":"Cancels the Guzzle timer and unsets it.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"CharlotteDunois\\Yasmin\\WebhookClient":{"name":"CharlotteDunois\\Yasmin\\WebhookClient","line":17,"short_desc":"The webhook client.","long_desc":"","hint":null,"tags":{"inheritDoc":[[""]]},"namespace":"CharlotteDunois\\Yasmin","file":"Z:\\Eigene Dokumente\\PHP Projekte\\Yasmin\\src\\WebhookClient.php","relative_file":"\\src\\WebhookClient.php","hash":"d3e8bffae6f2951cb996f0a9e0da0dc4242b1be0","parent":"CharlotteDunois\\Yasmin\\Models\\Webhook","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"id":{"name":"id","line":25,"short_desc":"The webhook ID.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"token":{"name":"token","line":25,"short_desc":"The webhook token.","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":25,"short_desc":"Any Client Options.","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false},"loop":{"name":"loop","line":25,"short_desc":"The ReactPHP Event Loop.","long_desc":null,"hint":[["\\React\\EventLoop\\LoopInterface",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["React","EventLoop","LoopInterface"],"attributes":{"startLine":25,"endLine":25}},"attributes":{"startLine":25,"endLine":25}},"default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]}}